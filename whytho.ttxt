place ___red box and room_5|How would you describe the results of that?
{'id': '37f278af-e2f5-4854-bde9-f9c9f2ca795c-f6406966', 'lang': 'en', 'sessionId': "<pwd.struct_passwd(pw_name='potato', pw_passwd='x', pw_uid=1000, pw_gid=1000, pw_gecos='potato,,,', pw_dir='/home/potato', pw_shell='/bin/bash'),4435>", 'timestamp': '2019-10-11T19:04:20.79Z', 'result': {'source': 'agent', 'resolvedQuery': 'can you place the box on the bottom room?', 'action': '', 'actionIncomplete': False, 'score': 1.0, 'parameters': {'Target': ['red box', 'room_5'], 'Unknown': 'place', 'Action': ''}, 'contexts': [], 'metadata': {'intentId': '43a5d5b3-df49-4cef-b08f-c44e6a453004', 'intentName': 'Identify unknown', 'webhookUsed': 'False', 'webhookForSlotFillingUsed': 'False', 'isFallbackIntent': 'False'}, 'fulfillment': {'speech': 'place ___red box and room_5|How would you describe the results of that?', 'messages': [{'lang': 'en', 'type': 0, 'speech': 'place ___red box and room_5|How would you describe the results of that?'}]}}, 'status': {'code': 200, 'errorType': 'success'}}
$op___?red box and room_5| Ok, i'll see what i can do
{'id': 'edfd581c-0cd1-4fbc-9c71-e5b709d613a9-f6406966', 'lang': 'en', 'sessionId': "<pwd.struct_passwd(pw_name='potato', pw_passwd='x', pw_uid=1000, pw_gid=1000, pw_gecos='potato,,,', pw_dir='/home/potato', pw_shell='/bin/bash'),4435>", 'timestamp': '2019-10-11T19:04:30.186Z', 'result': {'source': 'agent', 'resolvedQuery': 'the box is at the bottom room', 'action': '', 'actionIncomplete': False, 'score': 1.0, 'parameters': {'Target': ['red box', 'room_5'], 'op': 'at', 'line': ''}, 'contexts': [], 'metadata': {'intentId': '72702130-e457-4dd1-aa78-4b4569722bc7', 'intentName': 'as Logic', 'webhookUsed': 'False', 'webhookForSlotFillingUsed': 'False', 'isFallbackIntent': 'False'}, 'fulfillment': {'speech': "$op___?red box and room_5| Ok, i'll see what i can do", 'messages': [{'lang': 'en', 'type': 0, 'speech': "$op___?red box and room_5| Ok, i'll see what i can do"}]}}, 'status': {'code': 200, 'errorType': 'success'}}
Action Name: goal state
Positive Pre: {'at [15,15] R'}
Negative Pre: set()
Positive Pos: {''}
Negative Pos: set()
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,15]'}]
== [{'?coord': '[9,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [10,15] self', 'at [3,15] R', 'current [10,16] right-self', 'hands_free', 'current [10,14] left-self', 'current [11,15] down-self', 'current [9,15] up-self'}
step_up grounded
{'at [3,15] R', 'current [8,14] left-self', 'hands_free', 'current [7,15] up-self', 'current [8,16] right-self', 'at [8,15] self', 'current [9,15] down-self'}
step_right grounded
{'at [3,15] R', 'hands_free', 'current [9,17] right-self', 'current [8,16] up-self', 'current [10,16] down-self', 'current [9,15] left-self', 'at [9,16] self'}
step_left grounded
{'current [10,14] down-self', 'at [3,15] R', 'hands_free', 'at [9,14] self', 'current [9,15] right-self', 'current [9,13] left-self', 'current [8,14] up-self'}
cycle done		4		4
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,15]'}]
== [{'?coord': '[10,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'current [11,16] right-self', 'at [3,15] R', 'current [10,15] up-self', 'hands_free', 'at [11,15] self', 'current [11,14] left-self', 'current [12,15] down-self'}
step_up grounded
{'at [3,15] R', 'hands_free', 'at [9,15] self', 'current [9,14] left-self', 'current [10,15] down-self', 'current [8,15] up-self', 'current [9,16] right-self'}
step_right grounded
{'at [3,15] R', 'at [10,16] self', 'hands_free', 'current [9,16] up-self', 'current [10,17] right-self', 'current [11,16] down-self', 'current [10,15] left-self'}
step_left grounded
{'current [10,15] right-self', 'at [3,15] R', 'hands_free', 'current [11,14] down-self', 'current [10,13] left-self', 'at [10,14] self', 'current [9,14] up-self'}
cycle done		7		8
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,15]'}]
== [{'?coord': '[8,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'current [6,15] up-self', 'hands_free', 'current [8,15] down-self', 'at [7,15] self', 'current [7,14] left-self', 'current [7,16] right-self'}
step_right grounded
{'current [9,16] down-self', 'at [3,15] R', 'current [8,17] right-self', 'hands_free', 'at [8,16] self', 'current [7,16] up-self', 'current [8,15] left-self'}
step_left grounded
{'at [3,15] R', 'at [8,14] self', 'hands_free', 'current [8,13] left-self', 'current [8,15] right-self', 'current [7,14] up-self', 'current [9,14] down-self'}
cycle done		9		11
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,16]'}]
== [{'?coord': '[9,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'current [9,18] right-self', 'at [3,15] R', 'current [10,17] down-self', 'hands_free', 'current [8,17] up-self', 'current [9,16] left-self', 'at [9,17] self'}
step_left grounded
cycle done		9		12
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,14]'}]
== [{'?coord': '[9,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [9,14] right-self', 'hands_free', 'current [9,12] left-self', 'current [8,13] up-self', 'at [9,13] self', 'current [10,13] down-self'}
cycle done		9		13
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,15]'}]
== [{'?coord': '[11,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'hands_free', 'at [12,15] self', 'current [12,16] right-self', 'current [11,15] up-self', 'current [12,14] left-self', 'current [13,15] down-self'}
step_up grounded
step_right grounded
{'at [3,15] R', 'at [11,16] self', 'hands_free', 'current [11,15] left-self', 'current [12,16] down-self', 'current [11,17] right-self', 'current [10,16] up-self'}
step_left grounded
{'at [3,15] R', 'current [10,14] up-self', 'current [12,14] down-self', 'hands_free', 'current [11,15] right-self', 'at [11,14] self', 'current [11,13] left-self'}
cycle done		11		16
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,15]'}]
== [{'?coord': '[7,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'hands_free', 'current [6,14] left-self', 'current [5,15] up-self', 'current [7,15] down-self', 'at [6,15] self', 'current [6,16] right-self'}
step_right grounded
{'at [3,15] R', 'hands_free', 'current [6,16] up-self', 'current [7,17] right-self', 'current [8,16] down-self', 'at [7,16] self', 'current [7,15] left-self'}
step_left grounded
{'current [7,15] right-self', 'at [3,15] R', 'current [6,14] up-self', 'hands_free', 'current [7,13] left-self', 'current [8,14] down-self', 'at [7,14] self'}
cycle done		13		19
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,15]'}]
== [{'?coord': '[9,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		12		19
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,16]'}]
== [{'?coord': '[10,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [10,17] self', 'current [9,17] up-self', 'at [3,15] R', 'hands_free', 'current [11,17] down-self', 'current [10,16] left-self', 'current [10,18] right-self'}
step_left grounded
cycle done		12		20
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,17]'}]
== [{'?coord': '[9,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'current [7,17] up-self', 'at [3,15] R', 'hands_free', 'current [8,16] left-self', 'at [8,17] self', 'current [9,17] down-self', 'current [8,18] right-self'}
step_right grounded
{'at [9,18] self', 'at [3,15] R', 'current [10,18] down-self', 'hands_free', 'current [9,19] right-self', 'current [8,18] up-self', 'current [9,17] left-self'}
step_left grounded
cycle done		13		22
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,16]'}]
== [{'?coord': '[8,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		12		22
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,13]'}]
== [{'?coord': '[9,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'current [10,14] right-self', 'at [10,13] self', 'at [3,15] R', 'hands_free', 'current [11,13] down-self', 'current [10,12] left-self', 'current [9,13] up-self'}
step_up grounded
{'at [3,15] R', 'at [8,13] self', 'hands_free', 'current [8,14] right-self', 'current [9,13] down-self', 'current [7,13] up-self', 'current [8,12] left-self'}
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [9,11] left-self', 'current [8,12] up-self', 'current [9,13] right-self', 'at [9,12] self', 'current [10,12] down-self'}
cycle done		14		25
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,14]'}]
== [{'?coord': '[10,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		13		25
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,14]'}]
== [{'?coord': '[8,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		12		25
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[12,15]'}]
== [{'?coord': '[12,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'hands_free', 'current [13,14] left-self', 'current [12,15] up-self', 'current [13,16] right-self', 'at [13,15] self', 'current [14,15] down-self'}
step_up grounded
cycle done		12		26
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,16]'}]
== [{'?coord': '[11,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'at [3,15] R', 'current [10,17] up-self', 'hands_free', 'at [11,17] self', 'current [11,18] right-self', 'current [11,16] left-self', 'current [12,17] down-self'}
step_left grounded
cycle done		12		27
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[6,15]'}]
== [{'?coord': '[6,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'at [5,15] self', 'hands_free', 'current [5,14] left-self', 'current [6,15] down-self', 'current [4,15] up-self', 'current [5,16] right-self'}
cycle done		12		28
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,17]'}]
== [{'?coord': '[8,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'current [8,17] down-self', 'current [7,16] left-self', 'hands_free', 'current [7,18] right-self', 'at [7,17] self', 'current [6,17] up-self'}
step_right grounded
{'at [3,15] R', 'current [8,17] left-self', 'hands_free', 'current [7,18] up-self', 'current [9,18] down-self', 'at [8,18] self', 'current [8,19] right-self'}
step_left grounded
cycle done		13		30
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,14]'}]
== [{'?coord': '[11,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'current [11,12] left-self', 'at [3,15] R', 'hands_free', 'current [12,13] down-self', 'at [11,13] self', 'current [10,13] up-self', 'current [11,14] right-self'}
cycle done		13		31
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,17]'}]
== [{'?coord': '[10,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [10,18] self', 'at [3,15] R', 'current [10,17] left-self', 'hands_free', 'current [10,19] right-self', 'current [11,18] down-self', 'current [9,18] up-self'}
step_left grounded
cycle done		13		32
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,16]'}]
== [{'?coord': '[7,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
cycle done		12		32
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,14]'}]
== [{'?coord': '[7,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [7,12] left-self', 'current [7,14] right-self', 'current [6,13] up-self', 'at [7,13] self', 'current [8,13] down-self'}
cycle done		12		33
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,18]'}]
== [{'?coord': '[9,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'current [10,19] down-self', 'at [3,15] R', 'current [9,18] left-self', 'hands_free', 'current [9,20] right-self', 'at [9,19] self', 'current [8,19] up-self'}
step_left grounded
cycle done		12		34
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,13]'}]
== [{'?coord': '[10,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [11,12] down-self', 'current [10,13] right-self', 'current [9,12] up-self', 'at [10,12] self', 'current [10,11] left-self'}
cycle done		12		35
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,13]'}]
== [{'?coord': '[8,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'current [7,12] up-self', 'at [3,15] R', 'current [9,12] down-self', 'hands_free', 'at [8,12] self', 'current [8,13] right-self', 'current [8,11] left-self'}
cycle done		12		36
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,12]'}]
== [{'?coord': '[9,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [8,11] up-self', 'current [10,11] down-self', 'current [9,10] left-self', 'current [9,12] right-self', 'at [9,11] self'}
cycle done		12		37
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,15]'}]
== [{'?coord': '[13,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'at [14,15] self', 'hands_free', 'current [13,15] up-self', 'current [14,14] left-self', 'current [15,15] down-self', 'current [14,16] right-self'}
step_up grounded
step_right grounded
{'at [3,15] R', 'current [12,16] up-self', 'hands_free', 'at [13,16] self', 'current [13,17] right-self', 'current [13,15] left-self', 'current [14,16] down-self'}
step_left grounded
{'at [3,15] R', 'current [14,14] down-self', 'hands_free', 'current [12,14] up-self', 'at [13,14] self', 'current [13,13] left-self', 'current [13,15] right-self'}
cycle done		14		40
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,17]'}]
== [{'?coord': '[11,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'at [3,15] R', 'current [11,17] left-self', 'hands_free', 'at [11,18] self', 'current [10,18] up-self', 'current [12,18] down-self', 'current [11,19] right-self'}
step_left grounded
cycle done		14		41
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,15]'}]
== [{'?coord': '[5,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'hands_free', 'at [4,15] self', 'current [4,14] left-self', 'current [4,16] right-self', 'current [3,15] up-self', 'current [5,15] down-self'}
step_right grounded
{'at [5,16] self', 'current [6,16] down-self', 'at [3,15] R', 'current [4,16] up-self', 'hands_free', 'current [5,17] right-self', 'current [5,15] left-self'}
step_left grounded
{'current [4,14] up-self', 'at [3,15] R', 'current [5,13] left-self', 'at [5,14] self', 'hands_free', 'current [6,14] down-self', 'current [5,15] right-self'}
cycle done		16		44
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,18]'}]
== [{'?coord': '[10,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'current [9,19] up-self', 'at [3,15] R', 'current [10,20] right-self', 'hands_free', 'at [10,19] self', 'current [10,18] left-self', 'current [11,19] down-self'}
step_left grounded
cycle done		16		45
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,17]'}]
== [{'?coord': '[7,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [7,19] right-self', 'at [7,18] self', 'current [8,18] down-self', 'current [7,17] left-self', 'current [6,18] up-self'}
step_left grounded
cycle done		16		46
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,13]'}]
== [{'?coord': '[11,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [11,11] left-self', 'current [11,13] right-self', 'at [11,12] self', 'current [10,12] up-self', 'current [12,12] down-self'}
cycle done		16		47
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,12]'}]
== [{'?coord': '[10,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [10,11] self', 'at [3,15] R', 'hands_free', 'current [10,10] left-self', 'current [10,12] right-self', 'current [9,11] up-self', 'current [11,11] down-self'}
cycle done		16		48
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,13]'}]
== [{'?coord': '[7,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [6,12] up-self', 'current [7,11] left-self', 'current [7,13] right-self', 'current [8,12] down-self', 'at [7,12] self'}
cycle done		16		49
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,18]'}]
== [{'?coord': '[8,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'current [9,19] down-self', 'at [3,15] R', 'current [8,20] right-self', 'hands_free', 'current [8,18] left-self', 'at [8,19] self', 'current [7,19] up-self'}
step_left grounded
cycle done		16		50
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,19]'}]
== [{'?coord': '[9,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [8,20] up-self', 'current [10,20] down-self', 'current [9,21] right-self', 'at [9,20] self', 'current [9,19] left-self'}
step_left grounded
cycle done		16		51
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,12]'}]
== [{'?coord': '[8,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [7,11] up-self', 'hands_free', 'at [8,11] self', 'current [8,12] right-self', 'current [9,11] down-self', 'current [8,10] left-self'}
cycle done		16		52
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,11]'}]
== [{'?coord': '[9,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'current [10,10] down-self', 'at [3,15] R', 'hands_free', 'current [9,9] left-self', 'current [8,10] up-self', 'current [9,11] right-self', 'at [9,10] self'}
cycle done		16		53
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[14,15]'}]
== [{'?coord': '[14,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'hands_free', 'at [15,15] self', 'current [14,15] up-self', 'current [15,16] right-self', 'current [16,15] down-self', 'current [15,14] left-self'}
step_up grounded
step_right grounded
{'at [3,15] R', 'at [14,16] self', 'hands_free', 'current [14,17] right-self', 'current [15,16] down-self', 'current [14,15] left-self', 'current [13,16] up-self'}
step_left grounded
{'at [14,14] self', 'at [3,15] R', 'hands_free', 'current [13,14] up-self', 'current [14,15] right-self', 'current [15,14] down-self', 'current [14,13] left-self'}
cycle done		18		56
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,15]'}]
== [{'?coord': '[4,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [4,15] left-self', 'current [4,17] right-self', 'current [5,16] down-self', 'current [3,16] up-self', 'at [4,16] self'}
step_left grounded
{'current [5,14] down-self', 'at [3,15] R', 'hands_free', 'current [4,13] left-self', 'current [4,15] right-self', 'at [4,14] self', 'current [3,14] up-self'}
pick grounded
{'has R', 'at [4,15] self', 'current [4,14] left-self', 'current [4,16] right-self', 'current [3,15] up-self', 'current [5,15] down-self'}
cycle done		20		59
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,16]'}]
== [{'?coord': '[13,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [12,17] up-self', 'current [13,16] left-self', 'current [14,17] down-self', 'current [13,18] right-self', 'at [13,17] self'}
step_left grounded
cycle done		20		60
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,18]'}]
== [{'?coord': '[11,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'at [11,19] self', 'current [10,19] up-self', 'current [12,19] down-self', 'current [11,18] left-self', 'current [11,20] right-self'}
step_left grounded
cycle done		20		61
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,16]'}]
== [{'?coord': '[5,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'at [3,15] R', 'current [4,17] up-self', 'hands_free', 'current [5,18] right-self', 'current [5,16] left-self', 'at [5,17] self', 'current [6,17] down-self'}
step_left grounded
cycle done		20		62
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,14]'}]
== [{'?coord': '[13,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [14,13] down-self', 'hands_free', 'current [13,12] left-self', 'at [13,13] self', 'current [13,14] right-self', 'current [12,13] up-self'}
cycle done		20		63
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,18]'}]
== [{'?coord': '[7,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'at [3,15] R', 'current [7,20] right-self', 'hands_free', 'at [7,19] self', 'current [7,18] left-self', 'current [6,19] up-self', 'current [8,19] down-self'}
step_left grounded
cycle done		20		64
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,19]'}]
== [{'?coord': '[10,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'current [9,20] up-self', 'hands_free', 'current [10,19] left-self', 'at [10,20] self', 'current [11,20] down-self', 'current [10,21] right-self'}
step_left grounded
cycle done		20		65
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,12]'}]
== [{'?coord': '[11,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [10,11] up-self', 'current [12,11] down-self', 'hands_free', 'current [11,12] right-self', 'current [11,10] left-self', 'at [11,11] self'}
cycle done		20		66
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,14]'}]
== [{'?coord': '[5,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'at [5,13] self', 'current [4,13] up-self', 'current [6,13] down-self', 'current [5,12] left-self', 'current [5,14] right-self'}
cycle done		20		67
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,20]'}]
== [{'?coord': '[9,20]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'hands_free', 'current [7,20] up-self', 'current [8,21] right-self', 'current [9,20] down-self', 'current [8,19] left-self', 'at [8,20] self'}
step_right grounded
{'current [9,20] left-self', 'current [10,21] down-self', 'at [3,15] R', 'hands_free', 'current [8,21] up-self', 'at [9,21] self', 'current [9,22] right-self'}
step_left grounded
cycle done		21		69
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,19]'}]
== [{'?coord': '[8,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		20		69
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,11]'}]
== [{'?coord': '[10,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [11,10] down-self', 'hands_free', 'at [10,10] self', 'current [10,11] right-self', 'current [9,10] up-self', 'current [10,9] left-self'}
cycle done		20		70
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,12]'}]
== [{'?coord': '[7,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'current [7,10] left-self', 'at [3,15] R', 'current [7,12] right-self', 'hands_free', 'current [8,11] down-self', 'current [6,11] up-self', 'at [7,11] self'}
cycle done		20		71
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,11]'}]
== [{'?coord': '[8,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [9,10] down-self', 'hands_free', 'current [8,9] left-self', 'at [8,10] self', 'current [8,11] right-self', 'current [7,10] up-self'}
cycle done		20		72
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,10]'}]
== [{'?coord': '[9,10]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'at [9,9] self', 'current [9,8] left-self', 'current [10,9] down-self', 'current [9,10] right-self', 'current [8,9] up-self'}
cycle done		20		73
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[15,15]'}]
== [{'?coord': '[15,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'current [16,16] right-self', 'hands_free', 'at [16,15] self', 'current [16,14] left-self', 'current [15,15] up-self', 'current [17,15] down-self'}
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [14,16] up-self', 'current [16,16] down-self', 'current [15,17] right-self', 'current [15,15] left-self', 'at [15,16] self'}
step_left grounded
{'current [15,15] right-self', 'at [3,15] R', 'hands_free', 'current [14,14] up-self', 'current [16,14] down-self', 'at [15,14] self', 'current [15,13] left-self'}
cycle done		22		76
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,17]'}]
== [{'?coord': '[13,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'current [13,17] up-self', 'hands_free', 'current [15,17] down-self', 'at [14,17] self', 'current [14,18] right-self', 'current [14,16] left-self'}
step_right grounded
{'at [3,15] R', 'current [13,19] right-self', 'hands_free', 'current [13,17] left-self', 'current [12,18] up-self', 'at [13,18] self', 'current [14,18] down-self'}
step_left grounded
cycle done		23		78
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,19]'}]
== [{'?coord': '[11,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'at [3,15] R', 'current [12,20] down-self', 'hands_free', 'current [11,19] left-self', 'at [11,20] self', 'current [10,20] up-self', 'current [11,21] right-self'}
step_left grounded
cycle done		23		79
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,16]'}]
== [{'?coord': '[4,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'at [3,16] self', 'hands_free', 'current [4,16] down-self', 'current [2,16] up-self', 'current [3,17] right-self', 'current [3,15] left-self'}
step_right grounded
{'at [3,15] R', 'current [4,18] right-self', 'hands_free', 'current [4,16] left-self', 'current [5,17] down-self', 'current [3,17] up-self', 'at [4,17] self'}
step_left grounded
cycle done		24		81
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[14,16]'}]
== [{'?coord': '[14,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		23		81
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,11]'}]
== [{'?coord': '[11,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [10,10] up-self', 'current [12,10] down-self', 'current [11,11] right-self', 'current [11,9] left-self', 'at [11,10] self'}
cycle done		23		82
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[14,14]'}]
== [{'?coord': '[14,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'current [14,12] left-self', 'at [3,15] R', 'hands_free', 'current [15,13] down-self', 'current [13,13] up-self', 'at [14,13] self', 'current [14,14] right-self'}
cycle done		23		83
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,20]'}]
== [{'?coord': '[10,20]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [9,21] up-self', 'current [11,21] down-self', 'current [10,22] right-self', 'current [10,20] left-self', 'at [10,21] self'}
step_left grounded
cycle done		23		84
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,17]'}]
== [{'?coord': '[5,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'current [5,17] left-self', 'at [3,15] R', 'current [4,18] up-self', 'current [6,18] down-self', 'hands_free', 'at [5,18] self', 'current [5,19] right-self'}
step_left grounded
cycle done		23		85
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,19]'}]
== [{'?coord': '[7,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'at [7,20] self', 'current [7,19] left-self', 'current [6,20] up-self', 'current [8,20] down-self', 'current [7,21] right-self'}
step_left grounded
cycle done		23		86
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,14]'}]
== [{'?coord': '[4,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'current [4,14] down-self', 'at [3,15] R', 'hands_free', 'current [3,15] right-self', 'at [3,14] self', 'current [3,13] left-self', 'current [2,14] up-self'}
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [4,14] right-self', 'at [4,13] self', 'current [3,13] up-self', 'current [5,13] down-self', 'current [4,12] left-self'}
cycle done		24		88
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,13]'}]
== [{'?coord': '[13,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [12,12] up-self', 'hands_free', 'current [13,13] right-self', 'current [14,12] down-self', 'at [13,12] self', 'current [13,11] left-self'}
cycle done		24		89
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,11]'}]
== [{'?coord': '[7,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [7,9] left-self', 'current [8,10] down-self', 'current [6,10] up-self', 'current [7,11] right-self', 'at [7,10] self'}
cycle done		24		90
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,15]'}]
== [{'?obj': 'R', '?coord': '[4,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'at [5,15] self', 'current [5,14] left-self', 'current [6,15] down-self', 'current [4,15] up-self', 'current [5,16] right-self'}
step_up grounded
{'has R', 'current [2,15] up-self', 'current [4,15] down-self', 'at [3,15] self', 'current [3,16] right-self', 'current [3,14] left-self'}
step_right grounded
{'has R', 'current [4,15] left-self', 'current [4,17] right-self', 'current [5,16] down-self', 'current [3,16] up-self', 'at [4,16] self'}
step_left grounded
{'has R', 'current [5,14] down-self', 'current [4,13] left-self', 'current [4,15] right-self', 'at [4,14] self', 'current [3,14] up-self'}
cycle done		27		94
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,10]'}]
== [{'?coord': '[10,10]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'at [10,9] self', 'current [10,10] right-self', 'hands_free', 'current [11,9] down-self', 'current [9,9] up-self', 'current [10,8] left-self'}
cycle done		27		95
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,20]'}]
== [{'?coord': '[8,20]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'at [8,21] self', 'hands_free', 'current [8,20] left-self', 'current [8,22] right-self', 'current [9,21] down-self', 'current [7,21] up-self'}
step_left grounded
cycle done		27		96
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,13]'}]
== [{'?coord': '[5,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [6,12] down-self', 'current [4,12] up-self', 'current [5,11] left-self', 'at [5,12] self', 'current [5,13] right-self'}
cycle done		27		97
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,10]'}]
== [{'?coord': '[8,10]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [7,9] up-self', 'at [8,9] self', 'current [8,10] right-self', 'current [9,9] down-self', 'current [8,8] left-self'}
cycle done		27		98
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,21]'}]
== [{'?coord': '[9,21]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'at [9,22] self', 'current [9,21] left-self', 'current [10,22] down-self', 'current [9,23] right-self', 'current [8,22] up-self'}
step_left grounded
cycle done		27		99
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,9]'}]
== [{'?coord': '[9,9]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'at [9,8] self', 'current [9,9] right-self', 'current [10,8] down-self', 'current [9,7] left-self', 'current [8,8] up-self'}
cycle done		27		100
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[16,15]'}]
== [{'?coord': '[16,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'current [18,15] down-self', 'hands_free', 'current [16,15] up-self', 'current [17,16] right-self', 'at [17,15] self', 'current [17,14] left-self'}
step_up grounded
step_right grounded
{'at [3,15] R', 'current [17,16] down-self', 'hands_free', 'at [16,16] self', 'current [16,17] right-self', 'current [16,15] left-self', 'current [15,16] up-self'}
step_left grounded
{'at [3,15] R', 'current [15,14] up-self', 'hands_free', 'current [17,14] down-self', 'current [16,13] left-self', 'current [16,15] right-self', 'at [16,14] self'}
cycle done		29		103
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,16]'}]
== [{'?coord': '[3,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'current [1,16] up-self', 'hands_free', 'current [2,15] left-self', 'at [2,16] self', 'current [2,17] right-self', 'current [3,16] down-self'}
step_right grounded
{'current [3,18] right-self', 'at [3,15] R', 'hands_free', 'current [2,17] up-self', 'at [3,17] self', 'current [3,16] left-self', 'current [4,17] down-self'}
pick grounded
{'has R', 'at [3,16] self', 'current [4,16] down-self', 'current [2,16] up-self', 'current [3,17] right-self', 'current [3,15] left-self'}
cycle done		31		106
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[14,17]'}]
== [{'?coord': '[14,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'hands_free', 'current [15,16] left-self', 'current [14,17] up-self', 'at [15,17] self', 'current [15,18] right-self', 'current [16,17] down-self'}
step_up grounded
step_right grounded
{'at [3,15] R', 'current [15,18] down-self', 'hands_free', 'at [14,18] self', 'current [13,18] up-self', 'current [14,19] right-self', 'current [14,17] left-self'}
step_left grounded
cycle done		32		108
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[15,16]'}]
== [{'?coord': '[15,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		31		108
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,20]'}]
== [{'?coord': '[11,20]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'current [11,20] left-self', 'at [3,15] R', 'hands_free', 'current [12,21] down-self', 'current [10,21] up-self', 'at [11,21] self', 'current [11,22] right-self'}
step_left grounded
cycle done		31		109
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,10]'}]
== [{'?coord': '[11,10]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [12,9] down-self', 'hands_free', 'current [10,9] up-self', 'at [11,9] self', 'current [11,8] left-self', 'current [11,10] right-self'}
cycle done		31		110
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,12]'}]
== [{'?coord': '[13,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'current [14,11] left-self', 'at [3,15] R', 'hands_free', 'at [14,12] self', 'current [15,12] down-self', 'current [13,12] up-self', 'current [14,13] right-self'}
step_right grounded
step_left grounded
{'current [14,11] down-self', 'at [3,15] R', 'current [13,10] left-self', 'at [13,11] self', 'hands_free', 'current [12,11] up-self', 'current [13,12] right-self'}
cycle done		32		112
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,17]'}]
== [{'?coord': '[4,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'current [5,18] down-self', 'at [3,15] R', 'hands_free', 'at [4,18] self', 'current [4,17] left-self', 'current [4,19] right-self', 'current [3,18] up-self'}
step_left grounded
cycle done		32		113
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,14]'}]
== [{'?coord': '[3,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'current [3,14] down-self', 'hands_free', 'current [1,14] up-self', 'current [2,13] left-self', 'at [2,14] self', 'current [2,15] right-self'}
step_left grounded
{'at [3,15] R', 'current [3,14] right-self', 'hands_free', 'current [4,13] down-self', 'current [3,12] left-self', 'current [2,13] up-self', 'at [3,13] self'}
pick grounded
{'current [4,14] down-self', 'has R', 'current [3,15] right-self', 'at [3,14] self', 'current [3,13] left-self', 'current [2,14] up-self'}
cycle done		34		116
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[14,13]'}]
== [{'?coord': '[14,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'hands_free', 'at [15,13] self', 'current [15,12] left-self', 'current [15,14] right-self', 'current [14,13] up-self', 'current [16,13] down-self'}
step_up grounded
step_right grounded
step_left grounded
cycle done		34		117
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,21]'}]
== [{'?coord': '[10,21]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [9,22] up-self', 'current [10,21] left-self', 'current [10,23] right-self', 'current [11,22] down-self', 'at [10,22] self'}
step_left grounded
cycle done		34		118
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,18]'}]
== [{'?coord': '[5,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [6,19] down-self', 'current [4,19] up-self', 'current [5,20] right-self', 'at [5,19] self', 'current [5,18] left-self'}
step_left grounded
cycle done		34		119
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,18]'}]
== [{'?coord': '[13,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [13,18] left-self', 'current [13,20] right-self', 'at [13,19] self', 'current [14,19] down-self', 'current [12,19] up-self'}
step_left grounded
cycle done		34		120
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,20]'}]
== [{'?coord': '[7,20]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [7,22] right-self', 'current [6,21] up-self', 'current [7,20] left-self', 'current [8,21] down-self', 'at [7,21] self'}
step_left grounded
cycle done		34		121
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[15,14]'}]
== [{'?coord': '[15,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		33		121
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,13]'}]
== [{'?coord': '[4,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [4,12] self', 'at [3,15] R', 'hands_free', 'current [5,12] down-self', 'current [4,13] right-self', 'current [4,11] left-self', 'current [3,12] up-self'}
cycle done		33		122
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,10]'}]
== [{'?coord': '[7,10]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [8,9] down-self', 'hands_free', 'at [7,9] self', 'current [7,10] right-self', 'current [7,8] left-self', 'current [6,9] up-self'}
cycle done		33		123
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,15]'}]
== [{'?obj': 'R', '?coord': '[5,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'current [6,14] left-self', 'current [5,15] up-self', 'current [7,15] down-self', 'at [6,15] self', 'current [6,16] right-self'}
step_up grounded
step_right grounded
{'has R', 'current [6,16] down-self', 'current [4,16] up-self', 'at [5,16] self', 'current [5,17] right-self', 'current [5,15] left-self'}
step_left grounded
{'has R', 'current [4,14] up-self', 'current [5,13] left-self', 'at [5,14] self', 'current [6,14] down-self', 'current [5,15] right-self'}
cycle done		35		126
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,12]'}]
== [{'?coord': '[5,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'current [5,10] left-self', 'at [3,15] R', 'hands_free', 'current [6,11] down-self', 'current [4,11] up-self', 'at [5,11] self', 'current [5,12] right-self'}
cycle done		35		127
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,9]'}]
== [{'?coord': '[10,9]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [10,7] left-self', 'current [11,8] down-self', 'current [9,8] up-self', 'current [10,9] right-self', 'at [10,8] self'}
cycle done		35		128
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,21]'}]
== [{'?coord': '[8,21]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'current [9,22] down-self', 'hands_free', 'current [8,23] right-self', 'at [8,22] self', 'current [8,21] left-self', 'current [7,22] up-self'}
step_left grounded
cycle done		35		129
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,9]'}]
== [{'?coord': '[8,9]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'current [8,9] right-self', 'at [3,15] R', 'hands_free', 'current [8,7] left-self', 'current [7,8] up-self', 'current [9,8] down-self', 'at [8,8] self'}
cycle done		35		130
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,15]'}]
== [{'?obj': 'R', '?coord': '[3,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'has R', 'current [2,14] left-self', 'current [1,15] up-self', 'at [2,15] self', 'current [3,15] down-self', 'current [2,16] right-self'}
step_right grounded
step_left grounded
cycle done		35		131
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,22]'}]
== [{'?coord': '[9,22]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'current [9,22] left-self', 'hands_free', 'current [10,23] down-self', 'current [9,24] right-self', 'current [8,23] up-self', 'at [9,23] self'}
step_left grounded
cycle done		35		132
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,8]'}]
== [{'?coord': '[9,8]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'current [8,7] up-self', 'at [3,15] R', 'hands_free', 'at [9,7] self', 'current [10,7] down-self', 'current [9,6] left-self', 'current [9,8] right-self'}
cycle done		35		133
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,16]'}]
== [{'?obj': 'R', '?coord': '[4,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'has R', 'current [4,18] right-self', 'current [4,16] left-self', 'current [5,17] down-self', 'current [3,17] up-self', 'at [4,17] self'}
step_left grounded
cycle done		35		134
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,14]'}]
== [{'?obj': 'R', '?coord': '[4,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'has R', 'current [4,14] right-self', 'at [4,13] self', 'current [3,13] up-self', 'current [5,13] down-self', 'current [4,12] left-self'}
cycle done		35		135
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[17,15]'}]
== [{'?coord': '[17,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'current [17,15] left-self', 'at [3,15] R', 'hands_free', 'current [17,17] right-self', 'at [17,16] self', 'current [16,16] up-self', 'current [18,16] down-self'}
step_left grounded
{'at [3,15] R', 'hands_free', 'current [17,13] left-self', 'current [16,14] up-self', 'current [18,14] down-self', 'current [17,15] right-self', 'at [17,14] self'}
cycle done		36		137
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[2,16]'}]
== [{'?coord': '[2,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'current [1,15] left-self', 'hands_free', 'at [1,16] self', 'current [2,16] down-self', 'current [0,16] up-self', 'current [1,17] right-self'}
step_right grounded
{'current [1,17] up-self', 'at [3,15] R', 'current [3,17] down-self', 'hands_free', 'at [2,17] self', 'current [2,18] right-self', 'current [2,16] left-self'}
step_left grounded
{'at [3,15] R', 'current [2,14] left-self', 'hands_free', 'current [1,15] up-self', 'at [2,15] self', 'current [3,15] down-self', 'current [2,16] right-self'}
cycle done		38		140
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[16,16]'}]
== [{'?coord': '[16,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'current [15,17] up-self', 'hands_free', 'current [17,17] down-self', 'at [16,17] self', 'current [16,16] left-self', 'current [16,18] right-self'}
step_left grounded
cycle done		38		141
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,21]'}]
== [{'?coord': '[11,21]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'at [3,15] R', 'current [11,21] left-self', 'hands_free', 'current [11,23] right-self', 'current [12,22] down-self', 'current [10,22] up-self', 'at [11,22] self'}
step_left grounded
cycle done		38		142
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[15,17]'}]
== [{'?coord': '[15,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'current [14,18] up-self', 'at [3,15] R', 'current [16,18] down-self', 'hands_free', 'current [15,17] left-self', 'current [15,19] right-self', 'at [15,18] self'}
step_left grounded
cycle done		38		143
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[14,12]'}]
== [{'?coord': '[14,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'current [15,11] left-self', 'hands_free', 'current [15,13] right-self', 'current [16,12] down-self', 'current [14,12] up-self', 'at [15,12] self'}
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [14,12] right-self', 'hands_free', 'current [15,11] down-self', 'current [14,10] left-self', 'current [13,11] up-self', 'at [14,11] self'}
cycle done		39		145
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,21]'}]
== [{'?coord': '[7,21]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'at [3,15] R', 'current [6,22] up-self', 'hands_free', 'at [7,22] self', 'current [8,22] down-self', 'current [7,21] left-self', 'current [7,23] right-self'}
step_left grounded
cycle done		39		146
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,17]'}]
== [{'?coord': '[3,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'current [2,18] up-self', 'current [3,17] left-self', 'hands_free', 'current [4,18] down-self', 'current [3,19] right-self', 'at [3,18] self'}
step_left grounded
cycle done		39		147
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,9]'}]
== [{'?coord': '[11,9]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'current [12,8] down-self', 'at [3,15] R', 'hands_free', 'current [10,8] up-self', 'at [11,8] self', 'current [11,9] right-self', 'current [11,7] left-self'}
cycle done		39		148
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[14,18]'}]
== [{'?coord': '[14,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [14,19] self', 'at [3,15] R', 'hands_free', 'current [13,19] up-self', 'current [15,19] down-self', 'current [14,20] right-self', 'current [14,18] left-self'}
step_left grounded
cycle done		39		149
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[16,14]'}]
== [{'?coord': '[16,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [15,13] up-self', 'current [16,14] right-self', 'current [16,12] left-self', 'current [17,13] down-self', 'at [16,13] self'}
cycle done		39		150
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,19]'}]
== [{'?coord': '[13,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_left grounded
cycle done		38		150
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,18]'}]
== [{'?coord': '[4,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'current [5,19] down-self', 'at [3,15] R', 'current [4,18] left-self', 'at [4,19] self', 'hands_free', 'current [3,19] up-self', 'current [4,20] right-self'}
step_left grounded
cycle done		38		151
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,19]'}]
== [{'?coord': '[5,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_left grounded
cycle done		37		151
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,22]'}]
== [{'?coord': '[10,22]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'current [10,22] left-self', 'current [11,23] down-self', 'hands_free', 'at [10,23] self', 'current [9,23] up-self', 'current [10,24] right-self'}
step_left grounded
cycle done		37		152
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[2,14]'}]
== [{'?coord': '[2,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'hands_free', 'current [1,13] left-self', 'current [0,14] up-self', 'current [1,15] right-self', 'at [1,14] self', 'current [2,14] down-self'}
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [3,13] down-self', 'current [2,14] right-self', 'at [2,13] self', 'current [1,13] up-self', 'current [2,12] left-self'}
cycle done		38		154
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[15,13]'}]
== [{'?coord': '[15,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		37		154
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,22]'}]
== [{'?coord': '[8,22]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'at [8,23] self', 'current [8,24] right-self', 'current [8,22] left-self', 'current [9,23] down-self', 'current [7,23] up-self'}
step_left grounded
cycle done		37		155
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,8]'}]
== [{'?coord': '[10,8]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [11,7] down-self', 'hands_free', 'at [10,7] self', 'current [10,6] left-self', 'current [10,8] right-self', 'current [9,7] up-self'}
cycle done		37		156
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,13]'}]
== [{'?coord': '[3,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [3,11] left-self', 'current [3,13] right-self', 'at [3,12] self', 'current [4,12] down-self', 'current [2,12] up-self'}
cycle done		37		157
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,12]'}]
== [{'?coord': '[4,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'current [4,10] left-self', 'at [3,15] R', 'hands_free', 'current [4,12] right-self', 'current [5,11] down-self', 'at [4,11] self', 'current [3,11] up-self'}
cycle done		37		158
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,11]'}]
== [{'?coord': '[13,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
cycle done		36		158
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,16]'}]
== [{'?obj': 'R', '?coord': '[3,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'has R', 'current [1,16] up-self', 'current [2,15] left-self', 'at [2,16] self', 'current [2,17] right-self', 'current [3,16] down-self'}
step_right grounded
{'has R', 'current [3,18] right-self', 'current [2,17] up-self', 'at [3,17] self', 'current [3,16] left-self', 'current [4,17] down-self'}
step_left grounded
cycle done		37		160
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,9]'}]
== [{'?coord': '[7,9]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [7,7] left-self', 'at [7,8] self', 'hands_free', 'current [8,8] down-self', 'current [7,9] right-self', 'current [6,8] up-self'}
cycle done		37		161
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,11]'}]
== [{'?coord': '[5,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
cycle done		36		161
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[6,15]'}]
== [{'?obj': 'R', '?coord': '[6,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'current [6,15] up-self', 'current [8,15] down-self', 'at [7,15] self', 'current [7,14] left-self', 'current [7,16] right-self'}
step_up grounded
cycle done		36		162
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[2,15]'}]
== [{'?obj': 'R', '?coord': '[2,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'has R', 'at [1,15] self', 'current [1,16] right-self', 'current [1,14] left-self', 'current [0,15] up-self', 'current [2,15] down-self'}
step_right grounded
step_left grounded
{'has R', 'current [3,14] down-self', 'current [1,14] up-self', 'current [2,13] left-self', 'at [2,14] self', 'current [2,15] right-self'}
cycle done		37		164
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,23]'}]
== [{'?coord': '[9,23]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'current [8,24] up-self', 'at [3,15] R', 'hands_free', 'current [9,23] left-self', 'current [10,24] down-self', 'at [9,24] self', 'current [9,25] right-self'}
step_left grounded
cycle done		37		165
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,16]'}]
== [{'?obj': 'R', '?coord': '[5,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'has R', 'current [4,17] up-self', 'current [5,18] right-self', 'current [5,16] left-self', 'at [5,17] self', 'current [6,17] down-self'}
step_left grounded
cycle done		37		166
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,14]'}]
== [{'?obj': 'R', '?coord': '[3,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'has R', 'current [3,14] right-self', 'current [4,13] down-self', 'current [3,12] left-self', 'current [2,13] up-self', 'at [3,13] self'}
cycle done		37		167
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,8]'}]
== [{'?coord': '[8,8]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [8,8] right-self', 'hands_free', 'current [8,6] left-self', 'current [7,7] up-self', 'current [9,7] down-self', 'at [8,7] self'}
cycle done		37		168
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,17]'}]
== [{'?obj': 'R', '?coord': '[4,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'has R', 'current [5,18] down-self', 'at [4,18] self', 'current [4,17] left-self', 'current [4,19] right-self', 'current [3,18] up-self'}
step_left grounded
cycle done		37		169
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,7]'}]
== [{'?coord': '[9,7]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'at [9,6] self', 'hands_free', 'current [8,6] up-self', 'current [10,6] down-self', 'current [9,7] right-self', 'current [9,5] left-self'}
cycle done		37		170
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,14]'}]
== [{'?obj': 'R', '?coord': '[5,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'has R', 'at [5,13] self', 'current [4,13] up-self', 'current [6,13] down-self', 'current [5,12] left-self', 'current [5,14] right-self'}
cycle done		37		171
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,13]'}]
== [{'?obj': 'R', '?coord': '[4,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'has R', 'at [4,12] self', 'current [5,12] down-self', 'current [4,13] right-self', 'current [4,11] left-self', 'current [3,12] up-self'}
cycle done		37		172
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[17,16]'}]
== [{'?coord': '[17,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'current [18,17] down-self', 'at [3,15] R', 'hands_free', 'current [17,16] left-self', 'current [17,18] right-self', 'current [16,17] up-self', 'at [17,17] self'}
step_left grounded
cycle done		37		173
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,22]'}]
== [{'?coord': '[11,22]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'current [12,23] down-self', 'at [3,15] R', 'current [11,22] left-self', 'hands_free', 'at [11,23] self', 'current [11,24] right-self', 'current [10,23] up-self'}
step_left grounded
cycle done		37		174
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[16,17]'}]
== [{'?coord': '[16,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [16,18] self', 'at [3,15] R', 'current [17,18] down-self', 'hands_free', 'current [16,17] left-self', 'current [15,18] up-self', 'current [16,19] right-self'}
step_left grounded
cycle done		37		175
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[15,18]'}]
== [{'?coord': '[15,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'current [15,18] left-self', 'at [3,15] R', 'hands_free', 'current [14,19] up-self', 'current [16,19] down-self', 'current [15,20] right-self', 'at [15,19] self'}
step_left grounded
cycle done		37		176
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[17,14]'}]
== [{'?coord': '[17,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [17,14] right-self', 'current [18,13] down-self', 'hands_free', 'current [17,12] left-self', 'current [16,13] up-self', 'at [17,13] self'}
cycle done		37		177
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[1,16]'}]
== [{'?coord': '[1,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'at [1,17] self', 'current [1,16] left-self', 'current [2,17] down-self', 'current [1,18] right-self', 'current [0,17] up-self'}
step_left grounded
{'at [1,15] self', 'at [3,15] R', 'hands_free', 'current [1,16] right-self', 'current [1,14] left-self', 'current [0,15] up-self', 'current [2,15] down-self'}
cycle done		38		179
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,22]'}]
== [{'?coord': '[7,22]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'current [7,22] left-self', 'at [3,15] R', 'current [8,23] down-self', 'hands_free', 'at [7,23] self', 'current [7,24] right-self', 'current [6,23] up-self'}
step_left grounded
cycle done		38		180
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[1,14]'}]
== [{'?coord': '[1,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [1,12] left-self', 'at [1,13] self', 'current [1,14] right-self', 'current [2,13] down-self', 'current [0,13] up-self'}
cycle done		38		181
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,23]'}]
== [{'?coord': '[10,23]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [10,24] self', 'at [3,15] R', 'hands_free', 'current [10,23] left-self', 'current [10,25] right-self', 'current [11,24] down-self', 'current [9,24] up-self'}
step_left grounded
cycle done		38		182
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,8]'}]
== [{'?coord': '[11,8]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [12,7] down-self', 'hands_free', 'current [11,8] right-self', 'current [11,6] left-self', 'at [11,7] self', 'current [10,7] up-self'}
cycle done		38		183
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,18]'}]
== [{'?coord': '[3,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'hands_free', 'current [3,18] down-self', 'current [1,18] up-self', 'current [2,19] right-self', 'at [2,18] self', 'current [2,17] left-self'}
step_right grounded
{'at [3,15] R', 'hands_free', 'at [3,19] self', 'current [3,20] right-self', 'current [2,19] up-self', 'current [3,18] left-self', 'current [4,19] down-self'}
step_left grounded
cycle done		39		185
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[15,12]'}]
== [{'?coord': '[15,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'current [16,13] right-self', 'hands_free', 'current [15,12] up-self', 'current [16,11] left-self', 'at [16,12] self', 'current [17,12] down-self'}
step_up grounded
step_right grounded
step_left grounded
{'at [15,11] self', 'at [3,15] R', 'current [15,10] left-self', 'hands_free', 'current [14,11] up-self', 'current [16,11] down-self', 'current [15,12] right-self'}
cycle done		40		187
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,19]'}]
== [{'?coord': '[4,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_left grounded
cycle done		39		187
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[14,19]'}]
== [{'?coord': '[14,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_left grounded
cycle done		38		187
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[2,17]'}]
== [{'?coord': '[2,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		37		187
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[16,13]'}]
== [{'?coord': '[16,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		36		187
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,15]'}]
== [{'?obj': 'R', '?coord': '[7,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'current [8,14] left-self', 'current [7,15] up-self', 'current [8,16] right-self', 'at [8,15] self', 'current [9,15] down-self'}
step_up grounded
step_right grounded
{'has R', 'current [6,16] up-self', 'current [7,17] right-self', 'current [8,16] down-self', 'at [7,16] self', 'current [7,15] left-self'}
step_left grounded
{'has R', 'current [7,15] right-self', 'current [6,14] up-self', 'current [7,13] left-self', 'current [8,14] down-self', 'at [7,14] self'}
cycle done		38		190
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[14,11]'}]
== [{'?coord': '[14,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
cycle done		37		190
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[2,13]'}]
== [{'?coord': '[2,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'at [2,12] self', 'current [2,11] left-self', 'current [3,12] down-self', 'current [1,12] up-self', 'current [2,13] right-self'}
cycle done		37		191
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,23]'}]
== [{'?coord': '[8,23]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'at [8,24] self', 'current [9,24] down-self', 'current [8,25] right-self', 'current [8,23] left-self', 'current [7,24] up-self'}
step_left grounded
cycle done		37		192
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[2,15]'}]
== [{'?coord': '[2,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
pick grounded
cycle done		36		192
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,7]'}]
== [{'?coord': '[10,7]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'at [10,6] self', 'hands_free', 'current [10,7] right-self', 'current [9,6] up-self', 'current [10,5] left-self', 'current [11,6] down-self'}
cycle done		36		193
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,11]'}]
== [{'?coord': '[4,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'hands_free', 'current [3,12] right-self', 'current [3,10] left-self', 'at [3,11] self', 'current [2,11] up-self', 'current [4,11] down-self'}
step_right grounded
cycle done		36		194
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,8]'}]
== [{'?coord': '[7,8]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [7,8] right-self', 'at [7,7] self', 'current [7,6] left-self', 'current [6,7] up-self', 'current [8,7] down-self'}
cycle done		36		195
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,12]'}]
== [{'?coord': '[3,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		35		195
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[2,16]'}]
== [{'?obj': 'R', '?coord': '[2,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'has R', 'current [1,15] left-self', 'at [1,16] self', 'current [2,16] down-self', 'current [0,16] up-self', 'current [1,17] right-self'}
step_right grounded
{'has R', 'current [1,17] up-self', 'current [3,17] down-self', 'at [2,17] self', 'current [2,18] right-self', 'current [2,16] left-self'}
step_left grounded
cycle done		36		197
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,13]'}]
== [{'?obj': 'R', '?coord': '[3,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'has R', 'current [3,13] down-self', 'current [2,14] right-self', 'at [2,13] self', 'current [1,13] up-self', 'current [2,12] left-self'}
step_right grounded
step_left grounded
{'has R', 'current [3,11] left-self', 'current [3,13] right-self', 'at [3,12] self', 'current [4,12] down-self', 'current [2,12] up-self'}
cycle done		37		199
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,17]'}]
== [{'?obj': 'R', '?coord': '[3,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'has R', 'current [2,18] up-self', 'current [3,17] left-self', 'current [4,18] down-self', 'current [3,19] right-self', 'at [3,18] self'}
step_left grounded
cycle done		37		200
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,17]'}]
== [{'?obj': 'R', '?coord': '[5,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'has R', 'current [5,17] left-self', 'current [6,18] down-self', 'current [4,18] up-self', 'at [5,18] self', 'current [5,19] right-self'}
step_left grounded
cycle done		37		201
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[1,15]'}]
== [{'?obj': 'R', '?coord': '[1,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'has R', 'current [1,13] left-self', 'current [0,14] up-self', 'current [1,15] right-self', 'at [1,14] self', 'current [2,14] down-self'}
cycle done		37		202
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,24]'}]
== [{'?coord': '[9,24]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [9,24] left-self', 'at [9,25] self', 'current [8,25] up-self', 'current [10,25] down-self', 'current [9,26] right-self'}
step_left grounded
cycle done		37		203
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,7]'}]
== [{'?coord': '[8,7]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'current [8,5] left-self', 'at [3,15] R', 'current [7,6] up-self', 'at [8,6] self', 'hands_free', 'current [8,7] right-self', 'current [9,6] down-self'}
cycle done		37		204
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,6]'}]
== [{'?coord': '[9,6]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [9,6] right-self', 'hands_free', 'current [8,5] up-self', 'current [10,5] down-self', 'current [9,4] left-self', 'at [9,5] self'}
cycle done		37		205
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,18]'}]
== [{'?obj': 'R', '?coord': '[4,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'has R', 'current [5,19] down-self', 'current [4,18] left-self', 'at [4,19] self', 'current [3,19] up-self', 'current [4,20] right-self'}
step_left grounded
cycle done		37		206
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[2,14]'}]
== [{'?obj': 'R', '?coord': '[2,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		36		206
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,13]'}]
== [{'?obj': 'R', '?coord': '[5,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'has R', 'current [6,12] down-self', 'current [4,12] up-self', 'at [5,12] self', 'current [5,11] left-self', 'current [5,13] right-self'}
cycle done		36		207
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,12]'}]
== [{'?obj': 'R', '?coord': '[4,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'has R', 'current [4,10] left-self', 'current [4,12] right-self', 'current [5,11] down-self', 'at [4,11] self', 'current [3,11] up-self'}
cycle done		36		208
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[17,17]'}]
== [{'?coord': '[17,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'current [18,18] down-self', 'at [3,15] R', 'at [17,18] self', 'hands_free', 'current [16,18] up-self', 'current [17,19] right-self', 'current [17,17] left-self'}
step_left grounded
cycle done		36		209
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[1,17]'}]
== [{'?coord': '[1,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [1,19] right-self', 'at [1,18] self', 'current [2,18] down-self', 'current [1,17] left-self', 'current [0,18] up-self'}
step_left grounded
cycle done		36		210
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[16,18]'}]
== [{'?coord': '[16,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'current [16,20] right-self', 'at [3,15] R', 'hands_free', 'current [17,19] down-self', 'current [15,19] up-self', 'at [16,19] self', 'current [16,18] left-self'}
step_left grounded
cycle done		36		211
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[17,13]'}]
== [{'?coord': '[17,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [17,11] left-self', 'current [17,13] right-self', 'at [17,12] self', 'current [16,12] up-self', 'current [18,12] down-self'}
cycle done		36		212
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,23]'}]
== [{'?coord': '[11,23]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'at [3,15] R', 'current [12,24] down-self', 'current [10,24] up-self', 'hands_free', 'current [11,23] left-self', 'current [11,25] right-self', 'at [11,24] self'}
step_left grounded
cycle done		36		213
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[15,19]'}]
== [{'?coord': '[15,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_left grounded
cycle done		35		213
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[1,15]'}]
== [{'?coord': '[1,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
cycle done		34		213
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[16,12]'}]
== [{'?coord': '[16,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [16,12] right-self', 'hands_free', 'at [16,11] self', 'current [15,11] up-self', 'current [16,10] left-self', 'current [17,11] down-self'}
cycle done		34		214
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[1,13]'}]
== [{'?coord': '[1,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'at [1,12] self', 'current [1,11] left-self', 'current [2,12] down-self', 'current [0,12] up-self', 'current [1,13] right-self'}
cycle done		34		215
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,23]'}]
== [{'?coord': '[7,23]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'current [7,23] left-self', 'at [3,15] R', 'hands_free', 'current [7,25] right-self', 'at [7,24] self', 'current [8,24] down-self', 'current [6,24] up-self'}
step_left grounded
cycle done		34		216
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[2,18]'}]
== [{'?coord': '[2,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'current [2,18] left-self', 'hands_free', 'current [2,20] right-self', 'current [1,19] up-self', 'current [3,19] down-self', 'at [2,19] self'}
step_left grounded
cycle done		34		217
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,24]'}]
== [{'?coord': '[10,24]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'current [11,25] down-self', 'at [10,25] self', 'hands_free', 'current [10,24] left-self', 'current [10,26] right-self', 'current [9,25] up-self'}
step_left grounded
cycle done		34		218
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,7]'}]
== [{'?coord': '[11,7]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'current [12,6] down-self', 'at [3,15] R', 'current [10,6] up-self', 'hands_free', 'current [11,5] left-self', 'at [11,6] self', 'current [11,7] right-self'}
cycle done		34		219
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,24]'}]
== [{'?coord': '[8,24]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'current [9,25] down-self', 'at [8,25] self', 'hands_free', 'current [7,25] up-self', 'current [8,26] right-self', 'current [8,24] left-self'}
step_left grounded
cycle done		34		220
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[2,12]'}]
== [{'?coord': '[2,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [2,10] left-self', 'current [2,12] right-self', 'current [3,11] down-self', 'at [2,11] self', 'current [1,11] up-self'}
cycle done		34		221
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,6]'}]
== [{'?coord': '[10,6]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'current [10,4] left-self', 'at [3,15] R', 'hands_free', 'current [10,6] right-self', 'current [11,5] down-self', 'at [10,5] self', 'current [9,5] up-self'}
cycle done		34		222
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,7]'}]
== [{'?coord': '[7,7]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'at [7,6] self', 'current [8,6] down-self', 'current [7,7] right-self', 'current [6,6] up-self', 'current [7,5] left-self'}
cycle done		34		223
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,15]'}]
== [{'?obj': 'R', '?coord': '[8,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'at [9,15] self', 'current [9,14] left-self', 'current [10,15] down-self', 'current [8,15] up-self', 'current [9,16] right-self'}
step_up grounded
step_right grounded
{'has R', 'current [9,16] down-self', 'current [8,17] right-self', 'at [8,16] self', 'current [7,16] up-self', 'current [8,15] left-self'}
step_left grounded
{'has R', 'at [8,14] self', 'current [8,13] left-self', 'current [8,15] right-self', 'current [7,14] up-self', 'current [9,14] down-self'}
cycle done		36		226
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[15,11]'}]
== [{'?coord': '[15,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
cycle done		35		226
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,11]'}]
== [{'?coord': '[3,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
cycle done		34		226
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[1,16]'}]
== [{'?obj': 'R', '?coord': '[1,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'has R', 'at [1,17] self', 'current [1,16] left-self', 'current [2,17] down-self', 'current [1,18] right-self', 'current [0,17] up-self'}
step_left grounded
cycle done		34		227
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,19]'}]
== [{'?coord': '[3,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_left grounded
cycle done		33		227
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,18]'}]
== [{'?obj': 'R', '?coord': '[5,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'has R', 'at [5,19] self', 'current [4,19] up-self', 'current [5,20] right-self', 'current [6,19] down-self', 'current [5,18] left-self'}
step_left grounded
cycle done		33		228
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[2,17]'}]
== [{'?obj': 'R', '?coord': '[2,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'has R', 'current [3,18] down-self', 'current [1,18] up-self', 'current [2,19] right-self', 'at [2,18] self', 'current [2,17] left-self'}
step_left grounded
cycle done		33		229
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,6]'}]
== [{'?coord': '[8,6]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [8,5] self', 'at [3,15] R', 'current [8,6] right-self', 'hands_free', 'current [8,4] left-self', 'current [9,5] down-self', 'current [7,5] up-self'}
cycle done		33		230
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,25]'}]
== [{'?coord': '[9,25]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [9,26] self', 'at [3,15] R', 'hands_free', 'current [9,25] left-self', 'current [9,27] right-self', 'current [10,26] down-self', 'current [8,26] up-self'}
step_left grounded
cycle done		33		231
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,16]'}]
== [{'?obj': 'R', '?coord': '[7,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'has R', 'current [8,17] down-self', 'current [7,16] left-self', 'current [7,18] right-self', 'at [7,17] self', 'current [6,17] up-self'}
step_left grounded
cycle done		33		232
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[1,14]'}]
== [{'?obj': 'R', '?coord': '[1,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'has R', 'current [1,12] left-self', 'at [1,13] self', 'current [1,14] right-self', 'current [2,13] down-self', 'current [0,13] up-self'}
cycle done		33		233
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[2,13]'}]
== [{'?obj': 'R', '?coord': '[2,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'has R', 'at [2,12] self', 'current [2,11] left-self', 'current [3,12] down-self', 'current [1,12] up-self', 'current [2,13] right-self'}
cycle done		33		234
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,18]'}]
== [{'?obj': 'R', '?coord': '[3,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'has R', 'at [3,19] self', 'current [3,20] right-self', 'current [2,19] up-self', 'current [3,18] left-self', 'current [4,19] down-self'}
step_left grounded
cycle done		33		235
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,12]'}]
== [{'?obj': 'R', '?coord': '[5,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'has R', 'current [5,10] left-self', 'current [6,11] down-self', 'current [4,11] up-self', 'at [5,11] self', 'current [5,12] right-self'}
cycle done		33		236
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,12]'}]
== [{'?obj': 'R', '?coord': '[3,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'has R', 'current [3,12] right-self', 'current [3,10] left-self', 'at [3,11] self', 'current [2,11] up-self', 'current [4,11] down-self'}
cycle done		33		237
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,14]'}]
== [{'?obj': 'R', '?coord': '[7,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'has R', 'current [7,12] left-self', 'current [7,14] right-self', 'current [6,13] up-self', 'at [7,13] self', 'current [8,13] down-self'}
cycle done		33		238
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,19]'}]
== [{'?obj': 'R', '?coord': '[4,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_left grounded
cycle done		32		238
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,5]'}]
== [{'?coord': '[9,5]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [10,4] down-self', 'at [9,4] self', 'current [9,3] left-self', 'current [9,5] right-self', 'current [8,4] up-self'}
cycle done		32		239
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,11]'}]
== [{'?obj': 'R', '?coord': '[4,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
cycle done		31		239
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[17,18]'}]
== [{'?coord': '[17,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [18,19] down-self', 'current [17,18] left-self', 'at [17,19] self', 'current [16,19] up-self', 'current [17,20] right-self'}
step_left grounded
cycle done		31		240
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[16,19]'}]
== [{'?coord': '[16,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_left grounded
cycle done		30		240
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[1,18]'}]
== [{'?coord': '[1,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [0,19] up-self', 'current [1,20] right-self', 'current [1,18] left-self', 'at [1,19] self', 'current [2,19] down-self'}
step_left grounded
cycle done		30		241
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,24]'}]
== [{'?coord': '[11,24]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'at [3,15] R', 'current [10,25] up-self', 'hands_free', 'current [12,25] down-self', 'current [11,26] right-self', 'current [11,24] left-self', 'at [11,25] self'}
step_left grounded
cycle done		30		242
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[17,12]'}]
== [{'?coord': '[17,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [16,11] up-self', 'current [17,10] left-self', 'current [18,11] down-self', 'at [17,11] self', 'current [17,12] right-self'}
cycle done		30		243
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,6]'}]
== [{'?coord': '[11,6]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [12,5] down-self', 'current [10,5] up-self', 'current [11,4] left-self', 'at [11,5] self', 'current [11,6] right-self'}
cycle done		30		244
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,25]'}]
== [{'?coord': '[10,25]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [9,26] up-self', 'at [10,26] self', 'current [11,26] down-self', 'current [10,25] left-self', 'current [10,27] right-self'}
step_left grounded
cycle done		30		245
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[2,19]'}]
== [{'?coord': '[2,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_left grounded
cycle done		29		245
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[16,11]'}]
== [{'?coord': '[16,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
cycle done		28		245
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,24]'}]
== [{'?coord': '[7,24]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'current [7,24] left-self', 'at [3,15] R', 'hands_free', 'at [7,25] self', 'current [6,25] up-self', 'current [8,25] down-self', 'current [7,26] right-self'}
step_left grounded
cycle done		28		246
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[1,12]'}]
== [{'?coord': '[1,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [2,11] down-self', 'at [1,11] self', 'current [1,12] right-self', 'current [0,11] up-self', 'current [1,10] left-self'}
cycle done		28		247
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[1,17]'}]
== [{'?obj': 'R', '?coord': '[1,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'has R', 'current [1,19] right-self', 'at [1,18] self', 'current [2,18] down-self', 'current [1,17] left-self', 'current [0,18] up-self'}
step_left grounded
cycle done		28		248
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,5]'}]
== [{'?coord': '[10,5]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'at [10,4] self', 'current [10,3] left-self', 'current [9,4] up-self', 'current [11,4] down-self', 'current [10,5] right-self'}
cycle done		28		249
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,25]'}]
== [{'?coord': '[8,25]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [8,26] self', 'at [3,15] R', 'current [9,26] down-self', 'hands_free', 'current [8,25] left-self', 'current [7,26] up-self', 'current [8,27] right-self'}
step_left grounded
cycle done		28		250
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[2,11]'}]
== [{'?coord': '[2,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
cycle done		27		250
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,15]'}]
== [{'?obj': 'R', '?coord': '[9,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'at [10,15] self', 'current [10,16] right-self', 'current [10,14] left-self', 'current [11,15] down-self', 'current [9,15] up-self'}
step_up grounded
step_right grounded
{'has R', 'current [9,17] right-self', 'current [8,16] up-self', 'current [10,16] down-self', 'current [9,15] left-self', 'at [9,16] self'}
step_left grounded
{'has R', 'current [10,14] down-self', 'at [9,14] self', 'current [9,15] right-self', 'current [9,13] left-self', 'current [8,14] up-self'}
cycle done		29		253
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,6]'}]
== [{'?coord': '[7,6]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [7,6] right-self', 'current [8,5] down-self', 'at [7,5] self', 'current [7,4] left-self', 'current [6,5] up-self'}
cycle done		29		254
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,5]'}]
== [{'?coord': '[8,5]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'current [9,4] down-self', 'at [3,15] R', 'current [8,5] right-self', 'hands_free', 'at [8,4] self', 'current [8,3] left-self', 'current [7,4] up-self'}
cycle done		29		255
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[2,12]'}]
== [{'?obj': 'R', '?coord': '[2,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'has R', 'at [1,12] self', 'current [1,11] left-self', 'current [2,12] down-self', 'current [0,12] up-self', 'current [1,13] right-self'}
step_right grounded
step_left grounded
{'has R', 'current [2,10] left-self', 'current [2,12] right-self', 'current [3,11] down-self', 'at [2,11] self', 'current [1,11] up-self'}
cycle done		30		257
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,26]'}]
== [{'?coord': '[9,26]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'at [9,27] self', 'current [8,27] up-self', 'current [9,26] left-self', 'current [10,27] down-self', 'current [9,28] right-self'}
step_left grounded
cycle done		30		258
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[2,18]'}]
== [{'?obj': 'R', '?coord': '[2,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'has R', 'current [2,18] left-self', 'current [2,20] right-self', 'current [1,19] up-self', 'current [3,19] down-self', 'at [2,19] self'}
step_left grounded
cycle done		30		259
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,19]'}]
== [{'?obj': 'R', '?coord': '[5,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_left grounded
cycle done		29		259
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,19]'}]
== [{'?obj': 'R', '?coord': '[3,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_left grounded
cycle done		28		259
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[1,13]'}]
== [{'?obj': 'R', '?coord': '[1,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
cycle done		27		259
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,16]'}]
== [{'?obj': 'R', '?coord': '[8,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'has R', 'current [7,17] up-self', 'current [8,16] left-self', 'at [8,17] self', 'current [9,17] down-self', 'current [8,18] right-self'}
step_left grounded
cycle done		27		260
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,17]'}]
== [{'?obj': 'R', '?coord': '[7,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'has R', 'current [7,19] right-self', 'at [7,18] self', 'current [8,18] down-self', 'current [7,17] left-self', 'current [6,18] up-self'}
step_left grounded
cycle done		27		261
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,14]'}]
== [{'?obj': 'R', '?coord': '[8,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'has R', 'at [8,13] self', 'current [8,14] right-self', 'current [9,13] down-self', 'current [7,13] up-self', 'current [8,12] left-self'}
cycle done		27		262
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,13]'}]
== [{'?obj': 'R', '?coord': '[7,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'has R', 'current [6,12] up-self', 'current [7,11] left-self', 'current [7,13] right-self', 'current [8,12] down-self', 'at [7,12] self'}
cycle done		27		263
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,11]'}]
== [{'?obj': 'R', '?coord': '[5,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
cycle done		26		263
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,11]'}]
== [{'?obj': 'R', '?coord': '[3,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
cycle done		25		263
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,4]'}]
== [{'?coord': '[9,4]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [9,2] left-self', 'hands_free', 'current [8,3] up-self', 'current [9,4] right-self', 'at [9,3] self', 'current [10,3] down-self'}
cycle done		25		264
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[17,19]'}]
== [{'?coord': '[17,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_left grounded
cycle done		24		264
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[17,11]'}]
== [{'?coord': '[17,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
cycle done		23		264
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,25]'}]
== [{'?coord': '[11,25]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'hands_free', 'current [12,26] right-self', 'at [12,25] self', 'current [12,24] left-self', 'current [11,25] up-self', 'current [13,25] down-self'}
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [10,26] up-self', 'at [11,26] self', 'current [11,27] right-self', 'current [11,25] left-self', 'current [12,26] down-self'}
step_left grounded
cycle done		24		266
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[1,19]'}]
== [{'?coord': '[1,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_left grounded
cycle done		23		266
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,25]'}]
== [{'?coord': '[7,25]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'current [7,25] down-self', 'current [6,24] left-self', 'hands_free', 'current [5,25] up-self', 'current [6,26] right-self', 'at [6,25] self'}
step_right grounded
{'at [3,15] R', 'current [7,27] right-self', 'hands_free', 'current [8,26] down-self', 'at [7,26] self', 'current [7,25] left-self', 'current [6,26] up-self'}
step_left grounded
cycle done		24		268
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,5]'}]
== [{'?coord': '[11,5]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'hands_free', 'current [12,4] left-self', 'current [13,5] down-self', 'current [11,5] up-self', 'current [12,6] right-self', 'at [12,5] self'}
step_up grounded
step_right grounded
step_left grounded
{'current [11,5] right-self', 'at [3,15] R', 'hands_free', 'current [12,4] down-self', 'current [11,3] left-self', 'current [10,4] up-self', 'at [11,4] self'}
cycle done		25		270
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[1,11]'}]
== [{'?coord': '[1,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
cycle done		24		270
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,26]'}]
== [{'?coord': '[10,26]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [10,26] left-self', 'current [11,27] down-self', 'current [10,28] right-self', 'current [9,27] up-self', 'at [10,27] self'}
step_left grounded
cycle done		24		271
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,15]'}]
== [{'?obj': 'R', '?coord': '[10,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'current [11,16] right-self', 'current [10,15] up-self', 'at [11,15] self', 'current [11,14] left-self', 'current [12,15] down-self'}
step_up grounded
step_right grounded
{'has R', 'at [10,16] self', 'current [9,16] up-self', 'current [10,17] right-self', 'current [11,16] down-self', 'current [10,15] left-self'}
step_left grounded
{'has R', 'current [10,15] right-self', 'current [11,14] down-self', 'current [10,13] left-self', 'at [10,14] self', 'current [9,14] up-self'}
cycle done		26		274
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,5]'}]
== [{'?coord': '[7,5]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'hands_free', 'current [5,5] up-self', 'at [6,5] self', 'current [6,4] left-self', 'current [7,5] down-self', 'current [6,6] right-self'}
step_right grounded
step_left grounded
{'current [8,4] down-self', 'at [3,15] R', 'at [7,4] self', 'hands_free', 'current [7,3] left-self', 'current [6,4] up-self', 'current [7,5] right-self'}
cycle done		27		276
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[1,18]'}]
== [{'?obj': 'R', '?coord': '[1,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'has R', 'at [1,19] self', 'current [1,20] right-self', 'current [1,18] left-self', 'current [0,19] up-self', 'current [2,19] down-self'}
step_left grounded
cycle done		27		277
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,26]'}]
== [{'?coord': '[8,26]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [8,26] left-self', 'current [8,28] right-self', 'current [7,27] up-self', 'current [9,27] down-self', 'at [8,27] self'}
step_left grounded
cycle done		27		278
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,4]'}]
== [{'?coord': '[10,4]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'current [9,3] up-self', 'at [3,15] R', 'hands_free', 'current [10,4] right-self', 'current [11,3] down-self', 'current [10,2] left-self', 'at [10,3] self'}
cycle done		27		279
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,27]'}]
== [{'?coord': '[9,27]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [9,28] self', 'at [3,15] R', 'current [10,28] down-self', 'hands_free', 'current [8,28] up-self', 'current [9,27] left-self', 'current [9,29] right-self'}
step_left grounded
cycle done		27		280
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,17]'}]
== [{'?obj': 'R', '?coord': '[8,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'current [9,18] right-self', 'current [10,17] down-self', 'current [8,17] up-self', 'current [9,16] left-self', 'at [9,17] self'}
step_up grounded
step_right grounded
{'has R', 'current [8,17] left-self', 'current [7,18] up-self', 'current [9,18] down-self', 'at [8,18] self', 'current [8,19] right-self'}
step_left grounded
cycle done		28		282
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,4]'}]
== [{'?coord': '[8,4]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'at [8,3] self', 'current [8,2] left-self', 'current [9,3] down-self', 'current [8,4] right-self', 'current [7,3] up-self'}
cycle done		28		283
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[2,19]'}]
== [{'?obj': 'R', '?coord': '[2,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_left grounded
cycle done		27		283
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,18]'}]
== [{'?obj': 'R', '?coord': '[7,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'has R', 'current [7,20] right-self', 'at [7,19] self', 'current [7,18] left-self', 'current [6,19] up-self', 'current [8,19] down-self'}
step_left grounded
cycle done		27		284
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,16]'}]
== [{'?obj': 'R', '?coord': '[9,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		26		284
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[1,12]'}]
== [{'?obj': 'R', '?coord': '[1,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'has R', 'current [2,11] down-self', 'at [1,11] self', 'current [1,12] right-self', 'current [0,11] up-self', 'current [1,10] left-self'}
cycle done		26		285
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,14]'}]
== [{'?obj': 'R', '?coord': '[9,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'has R', 'current [9,14] right-self', 'current [9,12] left-self', 'current [8,13] up-self', 'at [9,13] self', 'current [10,13] down-self'}
cycle done		26		286
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,3]'}]
== [{'?coord': '[9,3]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [8,2] up-self', 'at [9,2] self', 'current [10,2] down-self', 'current [9,1] left-self', 'current [9,3] right-self'}
cycle done		26		287
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[2,11]'}]
== [{'?obj': 'R', '?coord': '[2,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
cycle done		25		287
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,13]'}]
== [{'?obj': 'R', '?coord': '[8,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'has R', 'current [7,12] up-self', 'current [9,12] down-self', 'at [8,12] self', 'current [8,13] right-self', 'current [8,11] left-self'}
cycle done		25		288
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,12]'}]
== [{'?obj': 'R', '?coord': '[7,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'has R', 'current [7,10] left-self', 'current [7,12] right-self', 'current [8,11] down-self', 'current [6,11] up-self', 'at [7,11] self'}
cycle done		25		289
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[12,25]'}]
== [{'?coord': '[12,25]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'hands_free', 'current [13,26] right-self', 'current [12,25] up-self', 'at [13,25] self', 'current [13,24] left-self', 'current [14,25] down-self'}
step_up grounded
cycle done		25		290
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[12,5]'}]
== [{'?coord': '[12,5]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'hands_free', 'current [12,5] up-self', 'current [13,4] left-self', 'current [14,5] down-self', 'at [13,5] self', 'current [13,6] right-self'}
step_up grounded
cycle done		25		291
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,26]'}]
== [{'?coord': '[11,26]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [11,28] right-self', 'at [11,27] self', 'current [12,27] down-self', 'current [10,27] up-self', 'current [11,26] left-self'}
step_left grounded
cycle done		25		292
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[6,25]'}]
== [{'?coord': '[6,25]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [5,25] self', 'current [5,26] right-self', 'at [3,15] R', 'hands_free', 'current [6,25] down-self', 'current [5,24] left-self', 'current [4,25] up-self'}
cycle done		25		293
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,27]'}]
== [{'?coord': '[10,27]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [10,28] self', 'at [3,15] R', 'hands_free', 'current [10,29] right-self', 'current [11,28] down-self', 'current [10,27] left-self', 'current [9,28] up-self'}
step_left grounded
cycle done		25		294
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,27]'}]
== [{'?coord': '[8,27]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'hands_free', 'current [6,27] up-self', 'current [7,28] right-self', 'current [8,27] down-self', 'current [7,26] left-self', 'at [7,27] self'}
step_right grounded
{'at [8,28] self', 'at [3,15] R', 'hands_free', 'current [8,29] right-self', 'current [8,27] left-self', 'current [7,28] up-self', 'current [9,28] down-self'}
step_left grounded
cycle done		26		296
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[6,5]'}]
== [{'?coord': '[6,5]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'current [6,5] down-self', 'at [3,15] R', 'hands_free', 'current [5,6] right-self', 'at [5,5] self', 'current [5,4] left-self', 'current [4,5] up-self'}
cycle done		26		297
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,15]'}]
== [{'?obj': 'R', '?coord': '[11,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'at [12,15] self', 'current [12,16] right-self', 'current [11,15] up-self', 'current [12,14] left-self', 'current [13,15] down-self'}
step_up grounded
step_right grounded
{'has R', 'at [11,16] self', 'current [11,15] left-self', 'current [12,16] down-self', 'current [11,17] right-self', 'current [10,16] up-self'}
step_left grounded
{'has R', 'current [12,14] down-self', 'current [10,14] up-self', 'current [11,15] right-self', 'at [11,14] self', 'current [11,13] left-self'}
cycle done		28		300
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,3]'}]
== [{'?coord': '[10,3]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [11,3] self', 'at [3,15] R', 'current [11,2] left-self', 'hands_free', 'current [11,4] right-self', 'current [10,3] up-self', 'current [12,3] down-self'}
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [9,2] up-self', 'at [10,2] self', 'current [11,2] down-self', 'current [10,3] right-self', 'current [10,1] left-self'}
cycle done		29		302
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,4]'}]
== [{'?coord': '[11,4]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
cycle done		28		302
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[1,19]'}]
== [{'?obj': 'R', '?coord': '[1,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_left grounded
cycle done		27		302
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,26]'}]
== [{'?coord': '[7,26]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
cycle done		26		302
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[1,11]'}]
== [{'?obj': 'R', '?coord': '[1,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
cycle done		25		302
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,28]'}]
== [{'?coord': '[9,28]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'current [9,30] right-self', 'hands_free', 'at [9,29] self', 'current [8,29] up-self', 'current [10,29] down-self', 'current [9,28] left-self'}
step_left grounded
cycle done		25		303
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,19]'}]
== [{'?obj': 'R', '?coord': '[7,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'current [9,19] down-self', 'current [8,20] right-self', 'current [8,18] left-self', 'at [8,19] self', 'current [7,19] up-self'}
step_right grounded
{'has R', 'at [7,20] self', 'current [7,19] left-self', 'current [6,20] up-self', 'current [8,20] down-self', 'current [7,21] right-self'}
step_left grounded
cycle done		26		305
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,16]'}]
== [{'?obj': 'R', '?coord': '[10,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'has R', 'current [9,17] up-self', 'at [10,17] self', 'current [11,17] down-self', 'current [10,16] left-self', 'current [10,18] right-self'}
step_left grounded
cycle done		26		306
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,4]'}]
== [{'?coord': '[7,4]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'current [8,3] down-self', 'at [3,15] R', 'hands_free', 'at [7,3] self', 'current [6,3] up-self', 'current [7,2] left-self', 'current [7,4] right-self'}
cycle done		26		307
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,17]'}]
== [{'?obj': 'R', '?coord': '[9,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'has R', 'at [9,18] self', 'current [10,18] down-self', 'current [9,19] right-self', 'current [8,18] up-self', 'current [9,17] left-self'}
step_left grounded
cycle done		26		308
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,3]'}]
== [{'?coord': '[8,3]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'current [9,2] down-self', 'at [3,15] R', 'hands_free', 'at [8,2] self', 'current [7,2] up-self', 'current [8,1] left-self', 'current [8,3] right-self'}
cycle done		26		309
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,11]'}]
== [{'?obj': 'R', '?coord': '[7,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'current [7,11] up-self', 'at [8,11] self', 'current [8,12] right-self', 'current [9,11] down-self', 'current [8,10] left-self'}
step_right grounded
step_left grounded
{'has R', 'current [7,9] left-self', 'current [8,10] down-self', 'current [6,10] up-self', 'current [7,11] right-self', 'at [7,10] self'}
cycle done		27		311
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,18]'}]
== [{'?obj': 'R', '?coord': '[8,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		26		311
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,12]'}]
== [{'?obj': 'R', '?coord': '[8,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'current [9,11] left-self', 'current [8,12] up-self', 'current [9,13] right-self', 'at [9,12] self', 'current [10,12] down-self'}
step_up grounded
step_right grounded
step_left grounded
cycle done		26		312
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,2]'}]
== [{'?coord': '[9,2]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [10,1] down-self', 'current [8,1] up-self', 'current [9,0] left-self', 'current [9,2] right-self', 'at [9,1] self'}
cycle done		26		313
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,13]'}]
== [{'?obj': 'R', '?coord': '[9,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'current [10,14] right-self', 'at [10,13] self', 'current [11,13] down-self', 'current [10,12] left-self', 'current [9,13] up-self'}
step_up grounded
step_right grounded
step_left grounded
cycle done		26		314
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,14]'}]
== [{'?obj': 'R', '?coord': '[10,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		25		314
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,25]'}]
== [{'?coord': '[13,25]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'hands_free', 'current [15,25] down-self', 'current [13,25] up-self', 'current [14,24] left-self', 'at [14,25] self', 'current [14,26] right-self'}
step_up grounded
step_right grounded
{'at [3,15] R', 'current [14,26] down-self', 'hands_free', 'current [13,27] right-self', 'at [13,26] self', 'current [12,26] up-self', 'current [13,25] left-self'}
step_left grounded
{'at [3,15] R', 'at [13,24] self', 'hands_free', 'current [12,24] up-self', 'current [14,24] down-self', 'current [13,23] left-self', 'current [13,25] right-self'}
cycle done		27		317
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,25]'}]
== [{'?coord': '[5,25]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'current [4,26] right-self', 'hands_free', 'current [5,25] down-self', 'at [4,25] self', 'current [4,24] left-self', 'current [3,25] up-self'}
step_right grounded
{'at [3,15] R', 'current [5,25] left-self', 'hands_free', 'at [5,26] self', 'current [6,26] down-self', 'current [5,27] right-self', 'current [4,26] up-self'}
step_left grounded
{'at [3,15] R', 'current [5,25] right-self', 'hands_free', 'current [5,23] left-self', 'at [5,24] self', 'current [6,24] down-self', 'current [4,24] up-self'}
cycle done		29		320
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,28]'}]
== [{'?coord': '[10,28]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'hands_free', 'current [10,28] up-self', 'current [11,29] right-self', 'at [11,28] self', 'current [11,27] left-self', 'current [12,28] down-self'}
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [11,29] down-self', 'current [9,29] up-self', 'current [10,28] left-self', 'at [10,29] self', 'current [10,30] right-self'}
step_left grounded
cycle done		30		322
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,27]'}]
== [{'?coord': '[11,27]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
cycle done		29		322
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,5]'}]
== [{'?coord': '[13,5]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'hands_free', 'current [14,6] right-self', 'current [14,4] left-self', 'current [13,5] up-self', 'current [15,5] down-self', 'at [14,5] self'}
step_up grounded
step_right grounded
{'at [3,15] R', 'current [13,5] left-self', 'hands_free', 'current [14,6] down-self', 'current [13,7] right-self', 'at [13,6] self', 'current [12,6] up-self'}
step_left grounded
{'at [3,15] R', 'current [14,4] down-self', 'hands_free', 'current [13,3] left-self', 'current [13,5] right-self', 'at [13,4] self', 'current [12,4] up-self'}
cycle done		31		325
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,3]'}]
== [{'?coord': '[11,3]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'at [11,2] self', 'current [12,2] down-self', 'at [3,15] R', 'hands_free', 'current [11,1] left-self', 'current [10,2] up-self', 'current [11,3] right-self'}
cycle done		31		326
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,5]'}]
== [{'?coord': '[5,5]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'hands_free', 'current [4,4] left-self', 'current [5,5] down-self', 'at [4,5] self', 'current [3,5] up-self', 'current [4,6] right-self'}
step_right grounded
{'current [4,6] up-self', 'at [3,15] R', 'hands_free', 'current [5,7] right-self', 'current [5,5] left-self', 'current [6,6] down-self', 'at [5,6] self'}
step_left grounded
{'current [5,3] left-self', 'at [3,15] R', 'hands_free', 'current [6,4] down-self', 'current [5,5] right-self', 'at [5,4] self', 'current [4,4] up-self'}
cycle done		33		329
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[12,15]'}]
== [{'?obj': 'R', '?coord': '[12,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'current [13,14] left-self', 'current [12,15] up-self', 'current [13,16] right-self', 'at [13,15] self', 'current [14,15] down-self'}
step_up grounded
cycle done		33		330
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,27]'}]
== [{'?coord': '[7,27]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'at [3,15] R', 'current [7,27] left-self', 'hands_free', 'current [8,28] down-self', 'current [7,29] right-self', 'at [7,28] self', 'current [6,28] up-self'}
step_left grounded
cycle done		33		331
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,16]'}]
== [{'?obj': 'R', '?coord': '[11,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'has R', 'current [10,17] up-self', 'at [11,17] self', 'current [11,18] right-self', 'current [11,16] left-self', 'current [12,17] down-self'}
step_left grounded
cycle done		33		332
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,18]'}]
== [{'?obj': 'R', '?coord': '[9,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'at [10,18] self', 'current [10,17] left-self', 'current [10,19] right-self', 'current [11,18] down-self', 'current [9,18] up-self'}
step_up grounded
step_right grounded
{'has R', 'current [10,19] down-self', 'current [9,18] left-self', 'current [9,20] right-self', 'at [9,19] self', 'current [8,19] up-self'}
step_left grounded
cycle done		34		334
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,19]'}]
== [{'?obj': 'R', '?coord': '[8,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'has R', 'current [7,20] up-self', 'current [8,21] right-self', 'current [9,20] down-self', 'current [8,19] left-self', 'at [8,20] self'}
step_left grounded
cycle done		34		335
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,28]'}]
== [{'?coord': '[8,28]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'at [8,29] self', 'current [8,30] right-self', 'current [8,28] left-self', 'current [9,29] down-self', 'current [7,29] up-self'}
step_left grounded
cycle done		34		336
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,3]'}]
== [{'?coord': '[7,3]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [7,1] left-self', 'current [6,2] up-self', 'current [8,2] down-self', 'current [7,3] right-self', 'at [7,2] self'}
cycle done		34		337
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,2]'}]
== [{'?coord': '[8,2]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [8,2] right-self', 'hands_free', 'current [7,1] up-self', 'at [8,1] self', 'current [9,1] down-self', 'current [8,0] left-self'}
cycle done		34		338
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,29]'}]
== [{'?coord': '[9,29]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_left grounded
cycle done		33		338
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,17]'}]
== [{'?obj': 'R', '?coord': '[10,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		32		338
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,2]'}]
== [{'?coord': '[10,2]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'current [9,1] up-self', 'at [3,15] R', 'current [11,1] down-self', 'hands_free', 'current [10,2] right-self', 'current [10,0] left-self', 'at [10,1] self'}
cycle done		32		339
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,13]'}]
== [{'?obj': 'R', '?coord': '[10,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'current [11,12] left-self', 'current [12,13] down-self', 'at [11,13] self', 'current [11,14] right-self', 'current [10,13] up-self'}
step_up grounded
step_right grounded
step_left grounded
{'has R', 'current [11,12] down-self', 'current [10,13] right-self', 'at [10,12] self', 'current [9,12] up-self', 'current [10,11] left-self'}
cycle done		33		341
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,14]'}]
== [{'?obj': 'R', '?coord': '[11,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
cycle done		32		341
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,1]'}]
== [{'?coord': '[9,1]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
cycle done		31		341
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,12]'}]
== [{'?obj': 'R', '?coord': '[9,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'has R', 'current [8,11] up-self', 'current [10,11] down-self', 'current [9,10] left-self', 'current [9,12] right-self', 'at [9,11] self'}
cycle done		31		342
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,20]'}]
== [{'?obj': 'R', '?coord': '[7,20]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'has R', 'current [7,22] right-self', 'current [6,21] up-self', 'current [7,20] left-self', 'current [8,21] down-self', 'at [7,21] self'}
step_left grounded
cycle done		31		343
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,11]'}]
== [{'?obj': 'R', '?coord': '[8,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'has R', 'current [9,10] down-self', 'current [8,9] left-self', 'at [8,10] self', 'current [8,11] right-self', 'current [7,10] up-self'}
cycle done		31		344
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,10]'}]
== [{'?obj': 'R', '?coord': '[7,10]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'has R', 'current [8,9] down-self', 'at [7,9] self', 'current [7,10] right-self', 'current [7,8] left-self', 'current [6,9] up-self'}
cycle done		31		345
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[14,25]'}]
== [{'?coord': '[14,25]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'current [15,26] right-self', 'hands_free', 'current [16,25] down-self', 'current [14,25] up-self', 'at [15,25] self', 'current [15,24] left-self'}
step_up grounded
step_right grounded
{'current [13,26] up-self', 'at [3,15] R', 'hands_free', 'current [15,26] down-self', 'at [14,26] self', 'current [14,25] left-self', 'current [14,27] right-self'}
step_left grounded
{'current [13,24] up-self', 'at [3,15] R', 'hands_free', 'current [15,24] down-self', 'current [14,25] right-self', 'current [14,23] left-self', 'at [14,24] self'}
cycle done		33		348
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[14,5]'}]
== [{'?coord': '[14,5]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'hands_free', 'current [16,5] down-self', 'current [15,4] left-self', 'at [15,5] self', 'current [15,6] right-self', 'current [14,5] up-self'}
step_up grounded
step_right grounded
{'current [13,6] up-self', 'current [15,6] down-self', 'at [3,15] R', 'hands_free', 'current [14,7] right-self', 'at [14,6] self', 'current [14,5] left-self'}
step_left grounded
{'at [3,15] R', 'current [14,3] left-self', 'current [14,5] right-self', 'hands_free', 'at [14,4] self', 'current [15,4] down-self', 'current [13,4] up-self'}
cycle done		35		351
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,25]'}]
== [{'?coord': '[4,25]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'current [3,26] right-self', 'at [3,15] R', 'hands_free', 'current [2,25] up-self', 'current [4,25] down-self', 'current [3,24] left-self', 'at [3,25] self'}
step_right grounded
{'at [3,15] R', 'current [4,25] left-self', 'hands_free', 'at [4,26] self', 'current [5,26] down-self', 'current [3,26] up-self', 'current [4,27] right-self'}
step_left grounded
{'at [3,15] R', 'hands_free', 'current [4,25] right-self', 'current [4,23] left-self', 'current [5,24] down-self', 'current [3,24] up-self', 'at [4,24] self'}
cycle done		37		354
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,26]'}]
== [{'?coord': '[13,26]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'current [13,28] right-self', 'at [13,27] self', 'at [3,15] R', 'current [13,26] left-self', 'current [14,27] down-self', 'hands_free', 'current [12,27] up-self'}
step_left grounded
cycle done		37		355
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,28]'}]
== [{'?coord': '[11,28]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'current [10,29] up-self', 'at [3,15] R', 'current [12,29] down-self', 'hands_free', 'at [11,29] self', 'current [11,28] left-self', 'current [11,30] right-self'}
step_left grounded
cycle done		37		356
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,24]'}]
== [{'?coord': '[13,24]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'current [13,22] left-self', 'at [3,15] R', 'current [12,23] up-self', 'hands_free', 'current [14,23] down-self', 'at [13,23] self', 'current [13,24] right-self'}
cycle done		37		357
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,6]'}]
== [{'?coord': '[13,6]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'at [3,15] R', 'current [13,8] right-self', 'at [13,7] self', 'hands_free', 'current [14,7] down-self', 'current [12,7] up-self', 'current [13,6] left-self'}
step_left grounded
cycle done		37		358
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,2]'}]
== [{'?coord': '[11,2]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [12,1] down-self', 'current [11,0] left-self', 'current [11,2] right-self', 'at [11,1] self', 'current [10,1] up-self'}
cycle done		37		359
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,15]'}]
== [{'?obj': 'R', '?coord': '[13,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'at [14,15] self', 'current [13,15] up-self', 'current [14,14] left-self', 'current [15,15] down-self', 'current [14,16] right-self'}
step_up grounded
step_right grounded
{'has R', 'current [12,16] up-self', 'at [13,16] self', 'current [13,17] right-self', 'current [13,15] left-self', 'current [14,16] down-self'}
step_left grounded
{'has R', 'current [14,14] down-self', 'current [12,14] up-self', 'at [13,14] self', 'current [13,13] left-self', 'current [13,15] right-self'}
cycle done		39		362
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,26]'}]
== [{'?coord': '[5,26]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [5,28] right-self', 'current [5,26] left-self', 'current [6,27] down-self', 'at [5,27] self', 'current [4,27] up-self'}
step_left grounded
cycle done		39		363
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,28]'}]
== [{'?coord': '[7,28]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'current [7,28] left-self', 'at [3,15] R', 'current [8,29] down-self', 'at [7,29] self', 'hands_free', 'current [7,30] right-self', 'current [6,29] up-self'}
step_left grounded
cycle done		39		364
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,29]'}]
== [{'?coord': '[10,29]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_left grounded
cycle done		38		364
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,5]'}]
== [{'?coord': '[4,5]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'current [2,5] up-self', 'current [3,4] left-self', 'at [3,15] R', 'hands_free', 'at [3,5] self', 'current [4,5] down-self', 'current [3,6] right-self'}
step_right grounded
{'at [3,15] R', 'hands_free', 'current [3,6] up-self', 'current [5,6] down-self', 'at [4,6] self', 'current [4,7] right-self', 'current [4,5] left-self'}
step_left grounded
{'current [4,3] left-self', 'at [3,15] R', 'hands_free', 'current [3,4] up-self', 'at [4,4] self', 'current [5,4] down-self', 'current [4,5] right-self'}
cycle done		40		367
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,4]'}]
== [{'?coord': '[13,4]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [14,3] down-self', 'current [13,2] left-self', 'hands_free', 'current [13,4] right-self', 'current [12,3] up-self', 'at [13,3] self'}
cycle done		40		368
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,6]'}]
== [{'?coord': '[5,6]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [4,7] up-self', 'current [5,6] left-self', 'at [5,7] self', 'current [5,8] right-self', 'current [6,7] down-self'}
step_left grounded
cycle done		40		369
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,17]'}]
== [{'?obj': 'R', '?coord': '[11,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'has R', 'current [11,17] left-self', 'at [11,18] self', 'current [10,18] up-self', 'current [12,18] down-self', 'current [11,19] right-self'}
step_left grounded
cycle done		40		370
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,20]'}]
== [{'?obj': 'R', '?coord': '[8,20]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'current [8,20] up-self', 'current [10,20] down-self', 'current [9,21] right-self', 'at [9,20] self', 'current [9,19] left-self'}
step_up grounded
step_right grounded
{'has R', 'at [8,21] self', 'current [8,20] left-self', 'current [8,22] right-self', 'current [9,21] down-self', 'current [7,21] up-self'}
step_left grounded
cycle done		41		372
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,1]'}]
== [{'?coord': '[10,1]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
cycle done		40		372
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,24]'}]
== [{'?coord': '[5,24]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'current [5,22] left-self', 'at [3,15] R', 'hands_free', 'at [5,23] self', 'current [6,23] down-self', 'current [5,24] right-self', 'current [4,23] up-self'}
cycle done		40		373
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,18]'}]
== [{'?obj': 'R', '?coord': '[10,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'has R', 'current [9,19] up-self', 'current [10,20] right-self', 'current [10,18] left-self', 'at [10,19] self', 'current [11,19] down-self'}
step_left grounded
cycle done		40		374
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,2]'}]
== [{'?coord': '[7,2]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'at [7,1] self', 'at [3,15] R', 'hands_free', 'current [6,1] up-self', 'current [7,2] right-self', 'current [7,0] left-self', 'current [8,1] down-self'}
cycle done		40		375
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,1]'}]
== [{'?coord': '[8,1]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
cycle done		39		375
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,29]'}]
== [{'?coord': '[8,29]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_left grounded
cycle done		38		375
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,10]'}]
== [{'?obj': 'R', '?coord': '[8,10]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'current [10,10] down-self', 'current [9,9] left-self', 'current [9,11] right-self', 'current [8,10] up-self', 'at [9,10] self'}
step_up grounded
step_right grounded
step_left grounded
{'has R', 'current [7,9] up-self', 'at [8,9] self', 'current [8,10] right-self', 'current [9,9] down-self', 'current [8,8] left-self'}
cycle done		39		377
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,21]'}]
== [{'?obj': 'R', '?coord': '[7,21]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'has R', 'current [6,22] up-self', 'at [7,22] self', 'current [8,22] down-self', 'current [7,21] left-self', 'current [7,23] right-self'}
step_left grounded
cycle done		39		378
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,19]'}]
== [{'?obj': 'R', '?coord': '[9,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		38		378
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,4]'}]
== [{'?coord': '[5,4]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [5,4] right-self', 'current [4,3] up-self', 'current [6,3] down-self', 'current [5,2] left-self', 'at [5,3] self'}
cycle done		38		379
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,13]'}]
== [{'?obj': 'R', '?coord': '[11,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'has R', 'current [11,11] left-self', 'current [11,13] right-self', 'at [11,12] self', 'current [10,12] up-self', 'current [12,12] down-self'}
cycle done		38		380
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,11]'}]
== [{'?obj': 'R', '?coord': '[9,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'at [10,11] self', 'current [10,10] left-self', 'current [10,12] right-self', 'current [9,11] up-self', 'current [11,11] down-self'}
step_up grounded
step_right grounded
step_left grounded
cycle done		38		381
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,9]'}]
== [{'?obj': 'R', '?coord': '[7,9]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'has R', 'current [7,7] left-self', 'at [7,8] self', 'current [8,8] down-self', 'current [7,9] right-self', 'current [6,8] up-self'}
cycle done		38		382
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,12]'}]
== [{'?obj': 'R', '?coord': '[10,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		37		382
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[15,25]'}]
== [{'?coord': '[15,25]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'current [15,25] up-self', 'hands_free', 'current [17,25] down-self', 'at [16,25] self', 'current [16,26] right-self', 'current [16,24] left-self'}
step_up grounded
step_right grounded
{'current [16,26] down-self', 'at [3,15] R', 'hands_free', 'current [15,27] right-self', 'current [15,25] left-self', 'current [14,26] up-self', 'at [15,26] self'}
step_left grounded
{'at [15,24] self', 'at [3,15] R', 'current [14,24] up-self', 'hands_free', 'current [16,24] down-self', 'current [15,25] right-self', 'current [15,23] left-self'}
cycle done		39		385
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,27]'}]
== [{'?coord': '[13,27]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'current [14,26] left-self', 'at [3,15] R', 'current [14,28] right-self', 'hands_free', 'current [13,27] up-self', 'at [14,27] self', 'current [15,27] down-self'}
step_right grounded
{'current [12,28] up-self', 'at [3,15] R', 'hands_free', 'current [13,27] left-self', 'current [14,28] down-self', 'at [13,28] self', 'current [13,29] right-self'}
step_left grounded
cycle done		40		387
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,29]'}]
== [{'?coord': '[11,29]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_left grounded
cycle done		39		387
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,25]'}]
== [{'?coord': '[3,25]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'current [2,24] left-self', 'hands_free', 'current [2,26] right-self', 'at [2,25] self', 'current [3,25] down-self', 'current [1,25] up-self'}
step_right grounded
{'at [3,15] R', 'at [3,26] self', 'current [3,25] left-self', 'hands_free', 'current [3,27] right-self', 'current [4,26] down-self', 'current [2,26] up-self'}
step_left grounded
{'at [3,15] R', 'at [3,24] self', 'hands_free', 'current [2,24] up-self', 'current [4,24] down-self', 'current [3,23] left-self', 'current [3,25] right-self'}
cycle done		41		390
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[15,5]'}]
== [{'?coord': '[15,5]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'current [17,5] down-self', 'at [3,15] R', 'hands_free', 'current [16,6] right-self', 'at [16,5] self', 'current [16,4] left-self', 'current [15,5] up-self'}
step_up grounded
step_right grounded
{'current [15,5] left-self', 'at [3,15] R', 'hands_free', 'at [15,6] self', 'current [15,7] right-self', 'current [16,6] down-self', 'current [14,6] up-self'}
step_left grounded
{'current [16,4] down-self', 'at [3,15] R', 'current [15,5] right-self', 'hands_free', 'at [15,4] self', 'current [14,4] up-self', 'current [15,3] left-self'}
cycle done		43		393
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[14,26]'}]
== [{'?coord': '[14,26]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		42		393
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,7]'}]
== [{'?coord': '[13,7]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'current [15,7] down-self', 'at [3,15] R', 'current [14,8] right-self', 'hands_free', 'current [13,7] up-self', 'at [14,7] self', 'current [14,6] left-self'}
step_right grounded
{'current [13,9] right-self', 'at [3,15] R', 'hands_free', 'current [13,7] left-self', 'at [13,8] self', 'current [14,8] down-self', 'current [12,8] up-self'}
step_left grounded
cycle done		43		395
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,23]'}]
== [{'?coord': '[13,23]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'hands_free', 'current [14,24] right-self', 'current [14,22] left-self', 'at [14,23] self', 'current [13,23] up-self', 'current [15,23] down-self'}
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [12,22] up-self', 'current [14,22] down-self', 'current [13,23] right-self', 'at [13,22] self', 'current [13,21] left-self'}
cycle done		44		397
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,1]'}]
== [{'?coord': '[11,1]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
cycle done		43		397
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[14,24]'}]
== [{'?coord': '[14,24]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		42		397
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,29]'}]
== [{'?coord': '[7,29]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_left grounded
cycle done		41		397
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,27]'}]
== [{'?coord': '[5,27]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
{'at [3,15] R', 'hands_free', 'at [4,27] self', 'current [4,26] left-self', 'current [5,27] down-self', 'current [3,27] up-self', 'current [4,28] right-self'}
step_right grounded
{'at [3,15] R', 'current [4,28] up-self', 'hands_free', 'current [5,29] right-self', 'at [5,28] self', 'current [6,28] down-self', 'current [5,27] left-self'}
step_left grounded
cycle done		42		399
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,5]'}]
== [{'?coord': '[3,5]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'hands_free', 'current [1,5] up-self', 'at [2,5] self', 'current [3,5] down-self', 'current [2,6] right-self', 'current [2,4] left-self'}
step_right grounded
{'at [3,15] R', 'at [3,6] self', 'hands_free', 'current [4,6] down-self', 'current [3,7] right-self', 'current [2,6] up-self', 'current [3,5] left-self'}
step_left grounded
{'at [3,15] R', 'current [3,3] left-self', 'hands_free', 'current [3,5] right-self', 'at [3,4] self', 'current [2,4] up-self', 'current [4,4] down-self'}
cycle done		44		402
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[14,15]'}]
== [{'?obj': 'R', '?coord': '[14,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'at [15,15] self', 'current [14,15] up-self', 'current [15,16] right-self', 'current [16,15] down-self', 'current [15,14] left-self'}
step_up grounded
step_right grounded
{'has R', 'at [14,16] self', 'current [14,17] right-self', 'current [15,16] down-self', 'current [14,15] left-self', 'current [13,16] up-self'}
step_left grounded
{'has R', 'at [14,14] self', 'current [13,14] up-self', 'current [14,15] right-self', 'current [15,14] down-self', 'current [14,13] left-self'}
drop grounded grounded
{'at [14,15] self', 'hands_free', 'current [13,15] up-self', 'at [15,15] R', 'current [14,14] left-self', 'current [15,15] down-self', 'current [14,16] right-self'}
cycle done		47		406
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,26]'}]
== [{'?coord': '[4,26]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		46		406
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[14,6]'}]
== [{'?coord': '[14,6]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		45		406
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,3]'}]
== [{'?coord': '[13,3]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [14,3] self', 'at [3,15] R', 'hands_free', 'current [15,3] down-self', 'current [14,2] left-self', 'current [14,4] right-self', 'current [13,3] up-self'}
step_right grounded
step_left grounded
{'at [3,15] R', 'current [14,2] down-self', 'hands_free', 'current [12,2] up-self', 'current [13,3] right-self', 'at [13,2] self', 'current [13,1] left-self'}
cycle done		46		408
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,20]'}]
== [{'?obj': 'R', '?coord': '[9,20]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'current [9,20] up-self', 'at [10,20] self', 'current [10,19] left-self', 'current [11,20] down-self', 'current [10,21] right-self'}
step_up grounded
step_right grounded
{'has R', 'current [9,20] left-self', 'current [10,21] down-self', 'current [8,21] up-self', 'at [9,21] self', 'current [9,22] right-self'}
step_left grounded
cycle done		47		410
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,24]'}]
== [{'?coord': '[4,24]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'current [4,22] left-self', 'at [3,15] R', 'hands_free', 'at [4,23] self', 'current [5,23] down-self', 'current [4,24] right-self', 'current [3,23] up-self'}
cycle done		47		411
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,6]'}]
== [{'?coord': '[4,6]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [3,7] up-self', 'current [4,6] left-self', 'current [4,8] right-self', 'at [4,7] self', 'current [5,7] down-self'}
step_left grounded
cycle done		47		412
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,16]'}]
== [{'?obj': 'R', '?coord': '[13,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'has R', 'current [12,17] up-self', 'current [13,16] left-self', 'current [14,17] down-self', 'current [13,18] right-self', 'at [13,17] self'}
step_left grounded
cycle done		47		413
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[14,4]'}]
== [{'?coord': '[14,4]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		46		413
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,7]'}]
== [{'?coord': '[5,7]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'at [3,15] R', 'at [5,8] self', 'hands_free', 'current [5,9] right-self', 'current [6,8] down-self', 'current [4,8] up-self', 'current [5,7] left-self'}
step_left grounded
cycle done		46		414
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,18]'}]
== [{'?obj': 'R', '?coord': '[11,18]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'has R', 'at [11,19] self', 'current [10,19] up-self', 'current [12,19] down-self', 'current [11,18] left-self', 'current [11,20] right-self'}
step_left grounded
cycle done		46		415
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,23]'}]
== [{'?coord': '[5,23]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [6,22] down-self', 'current [4,22] up-self', 'current [5,23] right-self', 'current [5,21] left-self', 'at [5,22] self'}
cycle done		46		416
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,1]'}]
== [{'?coord': '[7,1]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
cycle done		45		416
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,19]'}]
== [{'?obj': 'R', '?coord': '[10,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		44		416
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,12]'}]
== [{'?obj': 'R', '?coord': '[11,12]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'has R', 'current [10,11] up-self', 'current [12,11] down-self', 'current [11,12] right-self', 'current [11,10] left-self', 'at [11,11] self'}
cycle done		44		417
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,14]'}]
== [{'?obj': 'R', '?coord': '[13,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'has R', 'current [14,13] down-self', 'current [13,12] left-self', 'at [13,13] self', 'current [13,14] right-self', 'current [12,13] up-self'}
cycle done		44		418
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,4]'}]
== [{'?coord': '[4,4]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'current [5,3] down-self', 'at [3,15] R', 'hands_free', 'current [4,4] right-self', 'current [4,2] left-self', 'at [4,3] self', 'current [3,3] up-self'}
cycle done		44		419
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,21]'}]
== [{'?obj': 'R', '?coord': '[8,21]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'has R', 'current [9,22] down-self', 'current [8,23] right-self', 'at [8,22] self', 'current [8,21] left-self', 'current [7,22] up-self'}
step_left grounded
cycle done		44		420
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,22]'}]
== [{'?obj': 'R', '?coord': '[7,22]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'has R', 'current [7,22] left-self', 'current [8,23] down-self', 'at [7,23] self', 'current [7,24] right-self', 'current [6,23] up-self'}
step_left grounded
cycle done		44		421
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,10]'}]
== [{'?obj': 'R', '?coord': '[9,10]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'current [11,10] down-self', 'at [10,10] self', 'current [10,11] right-self', 'current [9,10] up-self', 'current [10,9] left-self'}
step_up grounded
step_right grounded
step_left grounded
{'has R', 'at [9,9] self', 'current [9,8] left-self', 'current [10,9] down-self', 'current [9,10] right-self', 'current [8,9] up-self'}
cycle done		45		423
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,11]'}]
== [{'?obj': 'R', '?coord': '[10,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		44		423
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,3]'}]
== [{'?coord': '[5,3]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'at [5,2] self', 'current [6,2] down-self', 'current [5,3] right-self', 'current [5,1] left-self', 'current [4,2] up-self'}
cycle done		44		424
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,8]'}]
== [{'?obj': 'R', '?coord': '[7,8]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'current [8,9] right-self', 'current [8,7] left-self', 'current [7,8] up-self', 'current [9,8] down-self', 'at [8,8] self'}
step_right grounded
step_left grounded
{'has R', 'current [7,8] right-self', 'at [7,7] self', 'current [7,6] left-self', 'current [6,7] up-self', 'current [8,7] down-self'}
cycle done		45		426
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,9]'}]
== [{'?obj': 'R', '?coord': '[8,9]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		44		426
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[16,25]'}]
== [{'?coord': '[16,25]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'at [3,15] R', 'hands_free', 'current [17,26] right-self', 'current [16,25] up-self', 'at [17,25] self', 'current [17,24] left-self', 'current [18,25] down-self'}
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [16,25] left-self', 'current [16,27] right-self', 'current [17,26] down-self', 'current [15,26] up-self', 'at [16,26] self'}
step_left grounded
{'at [3,15] R', 'hands_free', 'at [16,24] self', 'current [17,24] down-self', 'current [16,23] left-self', 'current [16,25] right-self', 'current [15,24] up-self'}
cycle done		46		429
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[15,26]'}]
== [{'?coord': '[15,26]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'current [15,26] left-self', 'current [14,27] up-self', 'at [3,15] R', 'current [16,27] down-self', 'hands_free', 'at [15,27] self', 'current [15,28] right-self'}
step_left grounded
cycle done		46		430
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[2,25]'}]
== [{'?coord': '[2,25]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'current [0,25] up-self', 'at [3,15] R', 'hands_free', 'current [2,25] down-self', 'at [1,25] self', 'current [1,24] left-self', 'current [1,26] right-self'}
step_right grounded
{'at [3,15] R', 'current [2,25] left-self', 'hands_free', 'current [2,27] right-self', 'current [3,26] down-self', 'current [1,26] up-self', 'at [2,26] self'}
step_left grounded
{'current [1,24] up-self', 'at [3,15] R', 'at [2,24] self', 'hands_free', 'current [2,23] left-self', 'current [2,25] right-self', 'current [3,24] down-self'}
cycle done		48		433
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[14,27]'}]
== [{'?coord': '[14,27]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'current [14,27] left-self', 'at [3,15] R', 'hands_free', 'current [13,28] up-self', 'current [14,29] right-self', 'at [14,28] self', 'current [15,28] down-self'}
step_left grounded
cycle done		48		434
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[16,5]'}]
== [{'?coord': '[16,5]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'current [17,4] left-self', 'at [3,15] R', 'hands_free', 'current [18,5] down-self', 'current [17,6] right-self', 'at [17,5] self', 'current [16,5] up-self'}
step_up grounded
step_right grounded
{'at [16,6] self', 'at [3,15] R', 'hands_free', 'current [16,5] left-self', 'current [17,6] down-self', 'current [15,6] up-self', 'current [16,7] right-self'}
step_left grounded
{'at [3,15] R', 'hands_free', 'current [17,4] down-self', 'at [16,4] self', 'current [16,3] left-self', 'current [16,5] right-self', 'current [15,4] up-self'}
cycle done		50		437
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[15,24]'}]
== [{'?coord': '[15,24]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [15,22] left-self', 'hands_free', 'current [16,23] down-self', 'current [15,24] right-self', 'current [14,23] up-self', 'at [15,23] self'}
cycle done		50		438
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[15,6]'}]
== [{'?coord': '[15,6]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'at [15,7] self', 'current [15,6] left-self', 'current [14,7] up-self', 'current [16,7] down-self', 'current [15,8] right-self'}
step_left grounded
cycle done		50		439
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[15,15]'}]
== [{'?obj': 'R', '?coord': '[15,15]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'current [16,16] right-self', 'current [16,14] left-self', 'at [16,15] self', 'current [15,15] up-self', 'current [17,15] down-self'}
step_up grounded
step_right grounded
{'has R', 'current [14,16] up-self', 'current [16,16] down-self', 'current [15,17] right-self', 'current [15,15] left-self', 'at [15,16] self'}
step_left grounded
{'has R', 'current [15,15] right-self', 'current [14,14] up-self', 'current [16,14] down-self', 'at [15,14] self', 'current [15,13] left-self'}
cycle done		52		442
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[2,5]'}]
== [{'?coord': '[2,5]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'current [0,5] up-self', 'hands_free', 'current [1,4] left-self', 'current [2,5] down-self', 'current [1,6] right-self', 'at [1,5] self'}
step_right grounded
{'at [3,15] R', 'hands_free', 'current [1,6] up-self', 'at [2,6] self', 'current [2,7] right-self', 'current [2,5] left-self', 'current [3,6] down-self'}
step_left grounded
{'current [2,3] left-self', 'at [3,15] R', 'hands_free', 'current [1,4] up-self', 'at [2,4] self', 'current [2,5] right-self', 'current [3,4] down-self'}
cycle done		54		445
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,27]'}]
== [{'?coord': '[4,27]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,27] self', 'at [3,15] R', 'current [3,26] left-self', 'hands_free', 'current [2,27] up-self', 'current [4,27] down-self', 'current [3,28] right-self'}
step_right grounded
{'at [3,15] R', 'hands_free', 'current [3,28] up-self', 'current [4,29] right-self', 'at [4,28] self', 'current [4,27] left-self', 'current [5,28] down-self'}
step_left grounded
cycle done		55		447
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,26]'}]
== [{'?coord': '[3,26]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		54		447
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[14,7]'}]
== [{'?coord': '[14,7]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'at [3,15] R', 'hands_free', 'current [14,7] left-self', 'current [13,8] up-self', 'current [14,9] right-self', 'current [15,8] down-self', 'at [14,8] self'}
step_left grounded
cycle done		54		448
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[14,23]'}]
== [{'?coord': '[14,23]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [14,23] right-self', 'current [13,22] up-self', 'current [15,22] down-self', 'current [14,21] left-self', 'at [14,22] self'}
cycle done		54		449
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,28]'}]
== [{'?coord': '[13,28]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'current [13,30] right-self', 'at [3,15] R', 'hands_free', 'current [13,28] left-self', 'current [12,29] up-self', 'at [13,29] self', 'current [14,29] down-self'}
step_left grounded
cycle done		54		450
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[15,4]'}]
== [{'?coord': '[15,4]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [15,4] right-self', 'hands_free', 'at [15,3] self', 'current [14,3] up-self', 'current [16,3] down-self', 'current [15,2] left-self'}
cycle done		54		451
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,22]'}]
== [{'?coord': '[13,22]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'current [14,21] down-self', 'hands_free', 'current [13,22] right-self', 'at [13,21] self', 'current [12,21] up-self', 'current [13,20] left-self'}
cycle done		54		452
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[14,16]'}]
== [{'?obj': 'R', '?coord': '[14,16]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'has R', 'current [13,17] up-self', 'current [15,17] down-self', 'at [14,17] self', 'current [14,18] right-self', 'current [14,16] left-self'}
step_left grounded
cycle done		54		453
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,7]'}]
== [{'?coord': '[4,7]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'current [2,7] up-self', 'at [3,7] self', 'hands_free', 'current [3,8] right-self', 'current [4,7] down-self', 'current [3,6] left-self'}
step_right grounded
{'current [4,7] left-self', 'at [3,15] R', 'hands_free', 'current [3,8] up-self', 'current [5,8] down-self', 'current [4,9] right-self', 'at [4,8] self'}
step_left grounded
cycle done		55		455
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,8]'}]
== [{'?coord': '[13,8]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'current [13,10] right-self', 'at [3,15] R', 'hands_free', 'current [13,8] left-self', 'current [12,9] up-self', 'at [13,9] self', 'current [14,9] down-self'}
step_left grounded
cycle done		55		456
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,22]'}]
== [{'?coord': '[5,22]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
{'at [3,15] R', 'hands_free', 'current [4,23] right-self', 'current [5,22] down-self', 'current [3,22] up-self', 'current [4,21] left-self', 'at [4,22] self'}
step_right grounded
step_left grounded
{'current [6,21] down-self', 'current [5,20] left-self', 'at [3,15] R', 'hands_free', 'at [5,21] self', 'current [5,22] right-self', 'current [4,21] up-self'}
cycle done		56		458
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,23]'}]
== [{'?coord': '[4,23]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
{'at [3,15] R', 'current [2,23] up-self', 'hands_free', 'at [3,23] self', 'current [3,22] left-self', 'current [4,23] down-self', 'current [3,24] right-self'}
step_right grounded
step_left grounded
cycle done		56		459
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,24]'}]
== [{'?coord': '[3,24]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		55		459
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,8]'}]
== [{'?coord': '[5,8]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'at [3,15] R', 'current [5,10] right-self', 'hands_free', 'current [4,9] up-self', 'current [6,9] down-self', 'at [5,9] self', 'current [5,8] left-self'}
step_left grounded
cycle done		55		460
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[14,3]'}]
== [{'?coord': '[14,3]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [15,2] down-self', 'current [14,3] right-self', 'current [14,1] left-self', 'current [13,2] up-self', 'at [14,2] self'}
cycle done		55		461
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,6]'}]
== [{'?coord': '[3,6]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		54		461
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,20]'}]
== [{'?obj': 'R', '?coord': '[10,20]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'current [12,20] down-self', 'current [11,19] left-self', 'at [11,20] self', 'current [10,20] up-self', 'current [11,21] right-self'}
step_up grounded
step_right grounded
{'has R', 'current [9,21] up-self', 'current [11,21] down-self', 'current [10,22] right-self', 'current [10,20] left-self', 'at [10,21] self'}
step_left grounded
cycle done		55		463
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,17]'}]
== [{'?obj': 'R', '?coord': '[13,17]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
{'has R', 'current [13,19] right-self', 'current [13,17] left-self', 'at [13,18] self', 'current [12,18] up-self', 'current [14,18] down-self'}
step_left grounded
cycle done		55		464
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,19]'}]
== [{'?obj': 'R', '?coord': '[11,19]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
cycle done		54		464
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,28]'}]
== [{'?coord': '[5,28]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
{'current [6,29] down-self', 'at [3,15] R', 'hands_free', 'current [4,29] up-self', 'current [5,30] right-self', 'at [5,29] self', 'current [5,28] left-self'}
step_left grounded
cycle done		54		465
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[14,14]'}]
== [{'?obj': 'R', '?coord': '[14,14]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'has R', 'current [14,12] left-self', 'current [15,13] down-self', 'current [13,13] up-self', 'at [14,13] self', 'current [14,14] right-self'}
cycle done		54		466
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[10,10]'}]
== [{'?obj': 'R', '?coord': '[10,10]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'current [10,10] up-self', 'current [12,10] down-self', 'current [11,11] right-self', 'current [11,9] left-self', 'at [11,10] self'}
step_up grounded
step_right grounded
step_left grounded
{'has R', 'at [10,9] self', 'current [10,10] right-self', 'current [11,9] down-self', 'current [9,9] up-self', 'current [10,8] left-self'}
cycle done		55		468
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[11,11]'}]
== [{'?obj': 'R', '?coord': '[11,11]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
step_right grounded
step_left grounded
cycle done		54		468
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,21]'}]
== [{'?obj': 'R', '?coord': '[9,21]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
{'has R', 'at [9,22] self', 'current [9,21] left-self', 'current [10,22] down-self', 'current [9,23] right-self', 'current [8,22] up-self'}
step_left grounded
cycle done		54		469
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,2]'}]
== [{'?coord': '[13,2]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'current [13,0] left-self', 'at [3,15] R', 'hands_free', 'at [13,1] self', 'current [12,1] up-self', 'current [14,1] down-self', 'current [13,2] right-self'}
cycle done		54		470
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[7,23]'}]
== [{'?obj': 'R', '?coord': '[7,23]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
{'has R', 'at [8,23] self', 'current [8,24] right-self', 'current [8,22] left-self', 'current [9,23] down-self', 'current [7,23] up-self'}
step_right grounded
{'has R', 'current [7,23] left-self', 'current [7,25] right-self', 'at [7,24] self', 'current [8,24] down-self', 'current [6,24] up-self'}
step_left grounded
cycle done		55		472
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[5,2]'}]
== [{'?coord': '[5,2]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_up grounded
{'at [3,15] R', 'hands_free', 'current [5,2] down-self', 'current [4,3] right-self', 'current [3,2] up-self', 'at [4,2] self', 'current [4,1] left-self'}
step_right grounded
step_left grounded
{'at [3,15] R', 'current [4,1] up-self', 'hands_free', 'current [5,2] right-self', 'current [5,0] left-self', 'current [6,1] down-self', 'at [5,1] self'}
cycle done		56		474
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[8,22]'}]
== [{'?obj': 'R', '?coord': '[8,22]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		55		474
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[3,4]'}]
== [{'?coord': '[3,4]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'at [3,15] R', 'hands_free', 'current [3,2] left-self', 'current [2,3] up-self', 'current [3,4] right-self', 'current [4,3] down-self', 'at [3,3] self'}
cycle done		55		475
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
pick grounded
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[4,3]'}]
== [{'?coord': '[4,3]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
cycle done		54		475
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[13,13]'}]
== [{'?obj': 'R', '?coord': '[13,13]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_right grounded
step_left grounded
{'has R', 'current [12,12] up-self', 'current [13,13] right-self', 'current [14,12] down-self', 'at [13,12] self', 'current [13,11] left-self'}
cycle done		54		476
--> step_down
step_down grounded
--> step_up
step_up grounded
--> step_right
step_right grounded
--> step_left
step_left grounded
--> pick
--> drop
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?coord': '[9,9]'}]
== [{'?obj': 'R', '?coord': '[9,9]'}]
[<class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>, <class 'solve.Clause'>]
step_down grounded
step_up grounded
step_right grounded
step_left grounded
{'has R', 'at [9,8] self', 'current [9,9] right-self', 'current [10,8] down-self', 'current [9,7] left-self', 'current [8,8] up-self'}
cycle done		54		477
== [{'?dest': '[15,15]', '?obj': 'R'}]
== [{'?obj': 'R', '?coord': '[14,15]', 'free(?dest)': 'True'}]
